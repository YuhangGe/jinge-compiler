{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/geyuhang/jinge/jinge-framework/util/type.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/array.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/const.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/common.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/setimm.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/dom.js","webpack:////Users/geyuhang/jinge/jinge-framework/util/index.js","webpack:////Users/geyuhang/jinge/jinge-framework/vm/core.js","webpack:////Users/geyuhang/jinge/jinge-framework/vm/proxy.js","webpack:////Users/geyuhang/jinge/jinge-framework/vm/index.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/messenger.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/style.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/i18n.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/component.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/bootstrap.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/render_fns.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/transition.js","webpack:////Users/geyuhang/jinge/jinge-framework/core/index.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/class.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/for.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/hide.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/html.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/if.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/parameter.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/log.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/i18n.js","webpack:////Users/geyuhang/jinge/jinge-framework/components/index.js","webpack:////Users/geyuhang/jinge/jinge-framework/index.js","webpack:///./app.html","webpack:///./index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;AClFO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;ACzCO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEO;AACP;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;;ACxCO;AACA;AACA;AACA;;AAEA;AACA;;AAEP;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA,SAAS,aAAM;AACtB;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,sBAAsB,QAAQ,EAAE,6BAA6B;AAC7D;;AAEO;AACP;AACA,cAAc,EAAE,IAAI,OAAO;AAC3B,GAAG,SAAS;AACZ;;AAEO;AACP;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;AC5GA;AACA;AACA;AACA;AACA;AAKgB;AAKE;;AAElB,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA,OAAO,UAAU,oCAAoC,UAAU;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,IAAI,WAAW;AACf;AACA,0CAA0C,GAAG;AAC7C;AACA;AACA,MAAM,QAAQ;AACd,MAAM,UAAU;AAChB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEO;AACA;;;AClEU;;AAEV;AACP;AACA;;AAEO;AACP,MAAM,OAAO;AACb;AACA;AACA;AACA;;AAEO;AACP;AACA,MAAM,QAAQ;AACd;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW;AACjB;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA,MAAM,QAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,QAAQ,OAAO;AACf;AACA;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEO,SAAS,oBAAgB;AAChC;AACA;;AAEO;AACP;AACA;;;AC3MuB;AACC;AACA;AACC;AACA;AACH;;;ACSL;;AAEV,iBAAiB,aAAM;AACvB,sBAAsB,aAAM;AAC5B,iBAAiB,aAAM;AACvB,cAAc,aAAM;AACpB,eAAe,aAAM;AACrB,kBAAkB,aAAM;AACxB,sBAAsB,aAAM;AAC5B,gBAAgB,aAAM;AACtB,6BAA6B,aAAM;;AAE1C,gBAAgB,aAAM;AACtB,uBAAuB,aAAM;AAC7B,yBAAyB,aAAM;AAC/B,kBAAkB,aAAM;AACxB,qBAAqB,aAAM;AAC3B,yBAAyB,aAAM;AAC/B,2BAA2B,aAAM;;AAE1B,sBAAsB,aAAM;AAC5B,yBAAyB,aAAM;AAC/B,wBAAwB,aAAM;AAC9B,mBAAmB,aAAM;;AAEzB;AACP;AACA;AACA;AACO;AACP,SAAS,QAAQ;AACjB;;AAEO;AACP,SAAS,QAAQ;AACjB;;AAEA,MAAM,SAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA,eAAe,SAAI;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;;AAEO,MAAM,mBAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB;AACvB,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,KAAK;AACL;AACA,MAAM,WAAW;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AC3ciB;AAaD;;AAET,yBAAyB,aAAM;;AAEtC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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A,KAAK;AACL;AACA,8BAA8B,UAAU;AACxC,iDAAiD,mBAAmB;AACpE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,OAAO,QAAQ,OAAO,UAAU;AAChC;AACA;AACA,MAAM,QAAQ;AACd,MAAM,QAAQ,EAAE,aAAa;AAC7B;AACA;AACA;AACA,IAAI,QAAQ,EAAE,aAAa;AAC3B;;AAEA;AACA,sBAAsB,mBAAc;AACpC,KAAK,QAAQ;AACb;AACA,IAAI,SAAS;AACb;AACA,UAAU,QAAQ;AAClB;AACA;;AAEA;AACA,MAAM,QAAQ;AACd;AACA,QAAQ,UAAU,yBAAyB,QAAQ;AACnD;AACA;;AAEA,QAAQ,OAAO;AACf,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;;AAEO;AACP,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,sBAAsB,mBAAc;AACpC;AACA;AACA,UAAU,aAAa;AACvB,YAAY,QAAQ;AACpB;AACA,UAAU,QAAQ;AAClB;AACA;;AAEO;AACP,OAAO,QAAQ;AACf,IAAI,UAAU;AACd;AACA;AACA,QAAQ,YAAY;AACpB;AACA,UAAU,QAAQ,QAAQ,UAAU,SAAS,QAAQ;AACrD,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ,EAAE,aAAa;AAC/B;AACA;;;AC7euB;AACC;;;ACGP;;AAEV,MAAM,mBAAS,GAAG,aAAM;;AAExB;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO,eAAe,aAAM;AACrB,WAAW,aAAM;AACjB,YAAY,aAAM;AAClB,cAAc,aAAM;;AAEpB,MAAM,mBAAS;AACtB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,SAAS,mBAAS;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAS;AAC/B;;AAEA;AACA,sBAAsB,sBAAsB,OAAO,mBAAS;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAS;AAC5B;;AAEA;AACA,qBAAqB,mBAAS;AAC9B;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACO;AACP,QAAQ,mBAAS,uBAAuB,mBAAS;AACjD;AACA;AACA;AACA,8BAA8B,mBAAS;AACvC;AACA;AACA,mBAAmB,sBAAsB,eAAe,mBAAS;AACjE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;;;ACtHiB;;AAEV,mBAAmB,aAAM;AACzB,mBAAmB,aAAM;AACzB,mBAAmB,aAAM;AACzB,sBAAsB,aAAM;;AAE5B;AACP;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,8BAA8B,cAAc;AAC5C;AACA,GAAG;AACH,EAAE,WAAW;AACb,SAAS,kBAAkB;AAC3B;;AAEA,MAAM,2BAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA,KAAK;AACL,IAAI,WAAW;AACf;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,GAAG,GAAG;AAC9B,uBAAuB,uBAAuB,8CAA8C,wBAAwB;AACpH,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,oBAAoB,2BAAqB;;;ACzG/B;AAMI;;AAEd,wBAAwB,aAAM;AAC9B,sBAAsB,aAAM;AAC5B,sBAAsB,aAAM;AAC5B,2BAA2B,aAAM;AACjC,2BAA2B,aAAM;AACjC,2BAA2B,aAAM;AACjC,4BAA4B,aAAM;;AAEzC,gBAAgB,aAAM;AACtB,0BAA0B,aAAM;AAChC,qBAAqB,aAAM;AAC3B,cAAc,aAAM;;AAEpB;AACA;AACA,2CAA2C,kBAAkB,oBAAoB;AACjF,cAAc,kBAAkB;AAChC,GAAG,EAAE,GAAG;AACR;;AAEA;AACA;AACA;;AAEA,MAAM,gBAAW,SAAS,mBAAS;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,SAAS;AACT,OAAO;AACP,yCAAyC,OAAO;AAChD;AACA,KAAK;AACL;AACA,WAAW,MAAM;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,eAAe,SAAS;AACxB;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;;AAEA;AACA;AACA,MAAM,UAAU;AAChB,4EAA4E;AAC5E;AACA;AACA,oCAAoC,KAAK,YAAY,IAAI;AACzD;AACA;AACA,MAAM,QAAQ;AACd;AACA;AACA;AACA;AACA;;AAEA;AACO,iBAAiB,gBAAW;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACO;AACP;AACA;;;ACrKiB;AAUF;AAMM;AAOJ;AAGD;;AAET,0BAA0B,aAAM;AAChC,wBAAwB,aAAM;AAC9B,eAAe,aAAM;AACrB,sBAAsB,aAAM;AAC5B,uBAAuB,aAAM;AAC7B,qBAAqB,aAAM;AAC3B,cAAc,aAAM;AACpB,gBAAgB,aAAM;AACtB,gBAAgB,aAAM;AACtB,sBAAsB,aAAM;AAC5B,mBAAmB,aAAM;AACzB,iCAAiC,aAAM;AACvC,kBAAkB,aAAM;AACxB,qBAAqB,aAAM;AAC3B,oBAAoB,aAAM;AAC1B,yBAAyB,aAAM;AAC/B,uBAAuB,aAAM;AAC7B,qBAAqB,aAAM;AAC3B,4BAA4B,aAAM;AAClC,8BAA8B,aAAM;AACpC,sBAAsB,aAAM;AAC5B,qBAAqB,aAAM;AAC3B,2BAA2B,aAAM;AACjC,uBAAuB,aAAM;AAC7B,oBAAoB,aAAM;AAC1B,oBAAoB,aAAM;AAC1B,gBAAgB,aAAM;AACtB,eAAe,aAAM;AACrB,uBAAuB,aAAM;AAC7B,wBAAwB,aAAM;AAC9B,cAAc,aAAM;AACpB;AACA;AACA;AACA;AACA;AACP;AACA;;AAEO,eAAe,aAAM;AACrB,2BAA2B,aAAM;;AAEjC,mBAAmB,aAAM;AAChC,iCAAiC,aAAM;AACvC,kCAAkC,aAAM;;AAExC;AACA;AACA,SAAS,YAAY,CAAC,iBAAiB;AACvC;;AAEO,MAAM,mBAAS,SAAS,mBAAS;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB;AACA;AACA,SAAS,QAAQ,aAAa,QAAQ;AACtC;AACA;AACA,gBAAgB,mBAAS;;AAEzB;;AAEA,SAAS,QAAQ;AACjB,SAAS,gBAAgB;;AAEzB;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;;AAE7B;AACA;AACA;;AAEA,WAAW,aAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,eAAe,SAAS;AACxB;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,sBAAsB,IAAW;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM,WAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,eAAe;AAC5B,eAAe,SAAS;AACxB;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA,KAAK;;AAEL,mBAAmB,wBAAwB;AAC3C;AACA;AACA,MAAM,WAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,SAAS,UAAU;AACnB,MAAM,UAAU,uBAAuB,WAAW;AAClD;AACA,IAAI,OAAY,CAAC,UAAU;AAC3B;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,SAAS,cAAc,UAAU;AAC1C;AACA,MAAM,UAAU;AAChB;AACA;AACA,IAAI,OAAY,CAAC,aAAa;AAC9B;AACA,MAAM,YAAY,CAAC,SAAS;AAC5B,KAAK;AACL,MAAM,WAAW;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,EAAE,aAAa;AAChC,uBAAuB,QAAQ,EAAE,aAAa;;AAE9C;AACA;AACA;AACA,SAAS,MAAM,EAAE,yBAAyB;AAC1C;AACA;AACA;AACA;AACA,UAAU,KAAK;AACf;AACA,IAAI,OAAY,CAAC,UAAU;AAC3B;AACA;AACA,UAAU,QAAQ,EAAE,UAAU;AAC9B;AACA,IAAI,qBAAqB;AACzB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,YAAY,QAAQ,QAAQ,QAAQ;AACpC,YAAY,QAAQ,EAAE,gBAAgB;AACtC,iBAAiB,QAAQ,EAAE,OAAO;AAClC;AACA;AACA;AACA,OAAO;AACP;AACA,WAAW,gBAAgB;AAC3B;AACA,IAAI,mBAAmB;AACvB,UAAU,QAAQ;AAClB;AACA;AACA,KAAK;AACL;AACA,SAAS,QAAQ,EAAE,UAAU;;AAE7B;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oBAAoB,SAAS;AAC7B;AACA,QAAQ,WAAW;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,EAAE,aAAa;AAC9C,SAAS,QAAQ,EAAE,aAAa;;AAEhC;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,4DAA4D;AAC5D;AACA,SAAS,MAAM,EAAE,uBAAuB;AACxC;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,UAAU;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC,OAAO;AACP;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,KAAK,UAAU,OAAO;AACtB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA,gEAAgE,sBAAsB;AACtF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA,KAAK;AACL,IAAI,qBAAqB;AACzB;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,QAAQ,WAAW;AACnB,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP,OAAO,OAAO;AACd;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;;;ACnqBiB;AAGF;AAIM;;AAEd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C,OAAO,WAAW,iBAAiB,UAAU;AAC7C,gBAAgB,aAAa;AAC7B;;;AClBiB;AAII;AAIL;;AAET;AACP,aAAa,aAAa,CAAC,SAAS;AACpC,YAAY,UAAU;AACtB;AACA;;AAEO;AACP,aAAa,aAAa;AAC1B,kCAAkC;AAClC,GAAG;AACH;AACA,YAAY,UAAU;AACtB;AACA;;AAEO;AACP,aAAa,cAAc;AAC3B,YAAY,UAAU;AACtB;AACA;;AAEO;AACP,aAAa,cAAc;AAC3B;AACA,qBAAqB,IAAW,CAAC,aAAa;AAC9C;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;;;AC1CiB;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACP,cAAc,oBAAgB;AAC9B,MAAM,kBAAkB;AACxB;AACA,GAAG,UAAU,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP,cAAc,oBAAgB;AAC9B,YAAY,kB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;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,QAAQ,aAAa,UAAU;AACzC;;AAEA;AACA,WAAW,aAAM;;AAEV,MAAM,gBAAY,SAAS,mBAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAmB,EAAE,KAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,OAAO;AACX,wBAAwB,KAAK,MAAM,cAAc;AACjD;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA,sBAAsB,cAAc;AACpC,OAAO,UAAU,QAAQ;AACzB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,cAAc;AACvB;;AAEA,GAAG,MAAM;AACT,uBAAuB,UAAU;AACjC,8BAA8B,cAAc,SAAS,cAAc,EAAE,WAAW;AAChF;AACA,iBAAiB,aAAa,CAAC,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,iBAAiB,aAAa,CAAC,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA,uBAAuB,UAAU;AACjC,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc,SAAS,cAAc,EAAE,WAAW;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA,6BAA6B,OAAO,QAAQ,UAAU;AACtD;AACA,yBAAyB,MAAM;AAC/B,QAAQ,YAAY,CAAC,SAAS;AAC9B,cAAc,OAAO;AACrB;AACA;AACA,cAAc,mBAAmB;AACjC;AACA,OAAO;AACP;AACA;AACA,KAAK;AA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AACjB,4BAA4B;AAC5B;AACA;;;AC/EwB;AACF;AACC;AACA;AACF;AACO;AACN;AACC;;;ACPM;AACN;AACA;AACF;;;ACDN;AAGA;AAC+C;AAC/C;AACf;AACA;AACA;AACA,eAAe,aAAsB;AACrC;AACA,gBAAgB,UAAmB;AACnC;AACA;AACA,cAAc,UAAmB;AACjC;AACA,GAAG;AACH;AACA,eAAe,aAAsB;AACrC;AACA,gBAAgB,UAAmB;AACnC,MAAM,yBAAkC;AACxC;AACA,QAAQ,yBAAkC;AAC1C;AACA,UAAU,aAAsB;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,aAAsB;AAC7C;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB,eAAwB;AACzC;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,QAAiB,EAAE,KAAc;AAClD,YAAY,QAAiB,iCAAiC,mCAAmC;AACjG;AACA,WAAW;AACX;AACA,QAAQ,yBAAkC;AAC1C;AACA,UAAU,aAAsB;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,aAAsB;AAC7C;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B,cAAuB;AAClD;AACA,kBAAkB,OAAgB;AAClC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB,QAAiB,EAAE,KAAc;AACtD;AACA,eAAe;AACf;AACA;AACA,cAAc,YAAqB;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,QAAiB,EAAE,KAAc;AAClD,YAAY,QAAiB,iCAAiC,oCAAoC;AAClG;AACA,WAAW;AACX;AACA,QAAQ,yBAAkC;AAC1C;AACA,UAAU,yBAAkC;AAC5C;AACA;AACA;AACA;AACA,uBAAuB,aAAsB;AAC7C;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB,iBAA0B;AAC3C;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,QAAiB,EAAE,KAAc;AAClD,YAAY,QAAiB,kCAAkC,sCAAsC;AACrG;AACA,WAAW;AACX,UAAU,aAAsB;AACh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AACrC;AACA,gBAAgB,UAAmB;AACnC;AACA;AACA,cAAc,UAAmB;AACjC;AACA,GAAG;AACH;AACA,eAAe,aAAsB;AACrC;AACA,gBAAgB,UAAmB;AACnC;AACA,mBAAmB,cAAuB;AAC1C;AACA,UAAU,OAAgB;AAC1B;AACA;AACA,aAAa,QAAiB,EAAE,KAAc;AAC9C;AACA,OAAO;AACP;AACA,cAAc,UAAmB;AACjC;AACA,GAAG;AACH;AACA,eAAe,aAAsB;AACrC;AACA,gBAAgB,UAAmB;AACnC;AACA,mBAAmB,yBAAkC;AACrD;AACA;AACA;AACA,QAAQ,QAAiB,iCAAiC,mBAAmB;AAC7E;AACA,OAAO;AACP;AACA,cAAc,UAAmB;AACjC;AACA,GAAG;AACH;AACA,C;;;ACneuB;AAGC;;AAOT;;AAEe;;AAE9B,MAAM,SAAG,SAAS,mBAAS;AAC3B;AACA,WAAW,GAAI;AACf;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,OAAO;AACX;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,CAAC,SAAG","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function typeOf(v) {\n  return typeof v;\n}\n\nexport function isObject(v) {\n  return v !== null && typeOf(v) === 'object';\n}\n\nexport function isString(v) {\n  return typeOf(v) === 'string';\n}\n\nexport function isNumber(v) {\n  return typeOf(v) === 'number' && !Number.isNaN(v) && Number.isFinite(v);\n}\n\nexport function isUndefined(v) {\n  return typeOf(v) === 'undefined';\n}\n\nexport function isArray(v) {\n  return Array.isArray(v);\n}\n\nexport function isBoolean(v) {\n  return typeof v === 'boolean' || instanceOf(v, Boolean);\n}\n\nexport function isFunction(v) {\n  return typeOf(v) === 'function';\n}\n\nexport function instanceOf(v, Clazz) {\n  return v instanceof Clazz;\n}\n\nexport function isDOMNode(ele) {\n  return instanceOf(ele, Node);\n}\n\nexport function isPromise(obj) {\n  return isObject(obj) && isFunction(obj.then);\n}\n","\nexport function arrayIndexOf(array, item) {\n  return array.indexOf(item);\n}\n\nexport function arrayRemove(array, item) {\n  const idx = arrayIndexOf(array, item);\n  if (idx < 0) return false;\n  array.splice(idx, 1);\n  return true;\n}\n\nexport function arrayPushIfNotExist(array, item) {\n  const idx = arrayIndexOf(array, item);\n  if (idx >= 0) return;\n  array.push(item);\n}\n\nexport function arrayFind(array, predicate) {\n  if (array.find) {\n    return array.find(predicate);\n  } else {\n    const i = arrayFindIndex(array, predicate);\n    return i >= 0 ? array[i] : null;\n  }\n}\n\nexport function arrayFindIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i)) return i;\n  }\n  return -1;\n}\n\nexport function arrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) return false;\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n}\n","export const STR_DEFAULT = 'default';\nexport const STR_JINGE = 'jinge';\nexport const STR_EMPTY = 'empty';\nexport const STR_LENGTH = 'length';\n\nexport const BEFORE_DESTROY_EVENT_NAME = 'jinge.before-destroy';\nexport const AFTER_RENDER_EVENT_NAME = 'jinge.after-render';\n\n/* eslint camelcase: \"off\" */\n/**\n * Constants below are prepared for code auto generated by compiler.\n */\nexport const HTML_ATTR_checked = 'checked';\nexport const HTML_ATTR_disabled = 'disabled';\nexport const HTML_ATTR_selected = 'selected';\nexport const HTML_ATTR_readOnly = 'readOnly';\nexport const HTML_ATTR_autofocus = 'autofocus';\nexport const HTML_ATTR_autocomplete = 'autocomplete';\nexport const HTML_ATTR_required = 'required';\nexport const HTML_ATTR_controls = 'controls';\nexport const HTML_ATTR_autoplay = 'autoplay';\nexport const HTML_ATTR_draggable = 'draggable';\nexport const HTML_ATTR_multiple = 'multiple';\nexport const HTML_ATTR_muted = 'muted';\nexport const HTML_ATTR_value = 'value';\n","\nexport function Symbol(description) {\n  return window.Symbol(description);\n}\n\nexport function assertFail(msg) {\n  msg && console.error(msg);\n  throw new Error('assert failed!');\n}\n\nexport function startsWith(str, search, position = 0) {\n  return str.startsWith(search, position);\n}\n\nexport function endsWith(str, search, endPosition) {\n  return str.endsWith(search, endPosition);\n}\n\nexport function defineProperty(...args) {\n  return Object.defineProperty(...args);\n}\n\nexport function assignObject(target, ...srcs) {\n  return Object.assign(target, ...srcs);\n}\n\nexport function obj2class(obj, prepend) {\n  const classes = Object.keys(obj).filter(k => obj[k]).join(' ').trim();\n  return prepend ? `${prepend}${classes ? ' ' + classes : ''}` : classes;\n}\n\nexport function obj2style(obj) {\n  return Object.keys(obj).map(k => {\n    return `${k}: ${obj[k]}`;\n  }).join(';').trim();\n}\n\nexport function defineProperties(...args) {\n  return Object.defineProperties(...args);\n}\n\n/**\n * @param {Object} obj\n * @param {Function} enumFn\n */\nexport function getOwnPropertyNames(obj, enumFn) {\n  const ns = Object.getOwnPropertyNames(obj);\n  if (enumFn) ns.forEach(enumFn);\n  return ns;\n}\n\n/**\n * @param {Object} obj\n * @param {Function} enumFn\n */\nexport function getOwnPropertySymbols(obj, enumFn) {\n  const ss = Object.getOwnPropertySymbols(obj);\n  if (enumFn) ss.forEach(enumFn);\n  return ss;\n}\n\nexport function isPropertyEnumerable(obj, key) {\n  return Object.prototype.propertyIsEnumerable.call(obj, key);\n}\n\nexport function createEmptyObject(o) {\n  return Object.create(o || null);\n}\n\nexport function uid() {\n  return Date.now().toString(32) + Math.floor(Math.random() * 0xffff).toString(32);\n}\n\nexport function mapObject(obj, fn) {\n  const newObj = {};\n  for (const k in obj) {\n    newObj[k] = fn(obj[k], k);\n  }\n  return newObj;\n}\n\nexport function getOrCreateProperty(obj, property, fn) {\n  let v = obj[property];\n  if (!v) {\n    v = obj[property] = fn();\n  }\n  return v;\n}\n\nexport function getOrCreateValueOfMap(map, key, fn) {\n  let v = map.get(key);\n  if (!v) {\n    v = fn();\n    map.set(key, v);\n  }\n  return v;\n}\n\nexport function getOrCreateMapProperty(obj, property) {\n  return getOrCreateProperty(obj, property, () => new Map());\n}\n\nexport function getOrCreateArrayValueOfMap(map, key) {\n  return getOrCreateValueOfMap(map, key, () => []);\n}\n\nexport function getOrCreateArrayProperty(obj, property) {\n  return getOrCreateProperty(obj, property, () => []);\n}\n","/**\n * setImmediate polyfill only for modern browsers\n * Copied from https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n * Simplified by Yuhang-Ge<abeyuhang@gmail.com>\n */\nimport {\n  isUndefined,\n  isFunction,\n  isString\n} from './type';\nimport {\n  assertFail,\n  startsWith,\n  uid\n} from './common';\n\nlet nextHandle = 1; // Spec says greater than zero\nlet tasksByHandle;\nlet currentlyRunningATask = false;\nlet registerImmediate;\n\nfunction setImmediateFallback(callback) {\n  if (!isFunction(callback) || arguments.length > 1) assertFail();\n  tasksByHandle.set(nextHandle, callback);\n  registerImmediate(nextHandle);\n  // console.log('siiii', callback);\n  return nextHandle++;\n}\n\nfunction clearImmediateFallback(handle) {\n  tasksByHandle.delete(handle);\n}\n\nfunction runIfPresent(handle) {\n  // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n  // So if we're currently running a task, we'll need to delay this invocation.\n  if (currentlyRunningATask) {\n    // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n    // 'too much recursion' error.\n    return setTimeout(runIfPresent, 0, handle);\n  }\n  const callback = tasksByHandle.get(handle);\n  // console.log('stttt', handle, callback);\n\n  if (!callback) return;\n  currentlyRunningATask = true;\n  try {\n    callback();\n  } finally {\n    clearImmediateFallback(handle);\n    currentlyRunningATask = false;\n  }\n}\n\nif (isUndefined(window.setImmediate)) {\n  tasksByHandle = new Map();\n  const messagePrefix = 'setImmediate$' + uid() + '$';\n  window.addEventListener('message', event => {\n    if (event.source === window &&\n      isString(event.data) &&\n      startsWith(event.data, messagePrefix)) {\n      runIfPresent(Number(event.data.slice(messagePrefix.length)));\n    }\n  }, false);\n\n  registerImmediate = function(handle) {\n    window.postMessage(messagePrefix + handle, '*');\n  };\n}\n\nexport const setImmediate = window.setImmediate || setImmediateFallback;\nexport const clearImmediate = window.clearImmediate || clearImmediateFallback;\n","import {\n  isString,\n  isArray,\n  isUndefined,\n  isObject\n} from '../util';\n\nexport function getParent($ele) {\n  return $ele.parentNode;\n}\n\nexport function setText($element, text) {\n  if (isArray(text)) {\n    text = JSON.stringify(text);\n  }\n  $element.textContent = text;\n}\n\nexport function setAttribute($ele, attrName, attrValue) {\n  if (!attrName) return;\n  if (isObject(attrName)) {\n    for (const attrN in attrName) {\n      setAttribute($ele, attrN, attrName[attrN]);\n    }\n    return;\n  }\n  if (isUndefined(attrValue) || attrValue === null) {\n    removeAttribute($ele, attrName);\n  } else {\n    $ele.setAttribute(attrName, attrValue);\n  }\n}\n\nexport function removeAttribute($ele, attrName) {\n  if (!attrName) return;\n  if (isObject(attrName)) {\n    for (const attrN in attrName) {\n      removeAttribute($ele, attrN);\n    }\n    return;\n  }\n  return $ele.removeAttribute(attrName);\n}\n\nexport function setInputValue($inputOrTextarea, value) {\n  $inputOrTextarea.value = value;\n}\n\nfunction _createEl($el, attrs, children) {\n  if (attrs) {\n    for (const an in attrs) {\n      if (an && !isUndefined(attrs[an])) {\n        setAttribute($el, an, attrs[an]);\n      }\n    }\n  }\n  children.forEach(child => appendChild($el, child));\n  return $el;\n}\n\nexport function createElement(tag, attrs, ...children) {\n  return _createEl(\n    document.createElement(tag),\n    attrs, children\n  );\n}\n\nexport function createElementWithoutAttrs(tag, ...children) {\n  return createElement(tag, null, ...children);\n}\n\nexport function createSVGElement(tag, attrs, ...children) {\n  return _createEl(\n    document.createElementNS('http://www.w3.org/2000/svg', tag),\n    attrs, children\n  );\n}\n\nexport function createSVGElementWithoutAttrs(tag, ...children) {\n  return createSVGElement(tag, null, ...children);\n}\n\nexport function createFragment(children) {\n  const $f = document.createDocumentFragment();\n  if (children) children.forEach(c => appendChild($f, c));\n  return $f;\n}\n\nexport function createTextNode(text = '') {\n  return document.createTextNode(text);\n}\n\nexport function createElementWithChild(tag, attrs, child) {\n  const $e = createElement(tag, attrs);\n  appendChild($e, child);\n  return $e;\n}\n\nexport function createComment(data) {\n  return document.createComment(data);\n}\n\nfunction prepareNewNode(newNode) {\n  if (!isArray(newNode)) return newNode;\n  if (newNode.length === 0) return null;\n  else if (newNode.length === 1) return newNode[0];\n  else {\n    return createFragment(newNode);\n  }\n}\n\nexport function replaceChild($parent, newNode, oldNode) {\n  if (!(newNode = prepareNewNode(newNode))) {\n    return;\n  }\n  $parent.replaceChild(newNode, oldNode);\n}\n\nexport function insertBefore($parent, newNode, referenceNode) {\n  if (!(newNode = prepareNewNode(newNode))) {\n    return;\n  }\n  $parent.insertBefore(newNode, referenceNode);\n}\n\nexport function insertAfter($parent, newNode, referenceNode) {\n  if (!(newNode = prepareNewNode(newNode))) {\n    return;\n  }\n  const rn = referenceNode.nextSibling;\n  if (!rn) {\n    appendChild($parent, newNode);\n  } else {\n    insertBefore($parent, newNode, rn);\n  }\n}\n\nexport function removeChild($parent, $child) {\n  $parent.removeChild($child);\n}\n\nexport function appendChild($parent, ...children) {\n  children.forEach(ch => {\n    if (isArray(ch)) {\n      return ch.forEach(cc => appendChild($parent, cc));\n    }\n    if (isString(ch)) {\n      ch = createTextNode(ch);\n    }\n    $parent.appendChild(ch);\n  });\n}\n\nexport function hasClass($ele, className) {\n  return $ele.classList.contains(className);\n}\n\nexport function toggleClass($ele, ...args) {\n  return $ele.classList.toggle(...args);\n}\nexport function addClass($ele, className) {\n  return toggleClass($ele, className, true);\n}\n\nexport function removeClass($ele, className) {\n  return toggleClass($ele, className, false);\n}\n\nexport function replaceClass($ele, oldClass, newClass) {\n  return $ele.classList.replace(oldClass, newClass);\n}\n\nexport function addEvent($element, eventName, handler, capture = false) {\n  $element.addEventListener(eventName, handler, capture);\n}\n\nexport function removeEvent($element, eventName, handler) {\n  $element.removeEventListener(eventName, handler);\n}\n\n/**\n * Add event to DOM element, similar as addEventListener,\n * but return deregister function which will call removeEventListener.\n *\n * @param {HtmlElement} $element\n * @param {String} eventName\n * @param {Function} handler\n * @param {Boolean|Object} capture\n * @returns {Function} deregister function which will removeEventListener\n */\nexport function registerEvent($element, eventName, handler, capture) {\n  addEvent($element, eventName, handler, capture);\n  return function deregister() {\n    removeEvent($element, eventName, handler);\n  };\n}\n\nexport function getComputedStyle(el, pseudoElt) {\n  return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function getCSPropertyValue(cst, prop) {\n  return cst.getPropertyValue(prop);\n}\n","export * from './type';\nexport * from './array';\nexport * from './const';\nexport * from './common';\nexport * from './setimm';\nexport * from './dom';\n","import {\n  isObject,\n  isString,\n  isUndefined,\n  setImmediate,\n  clearImmediate,\n  Symbol,\n  getOrCreateMapProperty,\n  arrayRemove,\n  getOwnPropertyNames,\n  arrayPushIfNotExist,\n  getOrCreateArrayProperty,\n  isArray,\n  arrayEqual\n} from '../util';\n\nexport const VM_ATTRS = Symbol();\nexport const VM_DEBUG_NAME = Symbol();\nexport const VM_PROXY = Symbol();\nexport const VM_ON = Symbol();\nexport const VM_OFF = Symbol();\nexport const VM_NOTIFY = Symbol();\nexport const VM_NOTIFIABLE = Symbol();\nexport const VM_HOST = Symbol();\nexport const VM_RELATED_LISTENERS = Symbol();\n\nconst PARENTS = Symbol();\nconst LISTENERS_STAR = Symbol();\nconst LISTENERS_DBSTAR = Symbol();\nconst LISTENERS = Symbol();\nconst LISTENERS_ID = Symbol();\nconst LISTENERS_PARENT = Symbol();\nconst LISTENERS_HANDLERS = Symbol();\n\nexport const VM_ADD_PARENT = Symbol();\nexport const VM_REMOVE_PARENT = Symbol();\nexport const VM_SHIFT_PARENT = Symbol();\nexport const VM_DESTROY = Symbol();\n\nexport function isInnerObj(v) {\n  const clazz = v.constructor;\n  return clazz === RegExp || clazz === Date || clazz === Boolean;\n}\nexport function isViewModel(obj) {\n  return isObject(obj) && !isInnerObj(obj) && (VM_ATTRS in obj);\n}\n\nexport function isPublicProp(v) {\n  return isString(v) && v.charCodeAt(0) !== 95;\n}\n\nclass Node {\n  constructor(parentNode, propertyName) {\n    this[LISTENERS_PARENT] = parentNode;\n    this[LISTENERS_ID] = propertyName;\n    this[LISTENERS] = null;\n    this[LISTENERS_HANDLERS] = null;\n  }\n}\n\nfunction getPropN(v) {\n  if (v === LISTENERS_DBSTAR || v === LISTENERS_STAR || isString(v)) {\n    return v;\n  }\n  if (v === null) {\n    return 'null';\n  }\n  if (isUndefined(v)) {\n    return 'undefined';\n  }\n  return v.toString();\n}\n\nfunction loopCreateNode(vm, props, level = 0) {\n  const propertyName = getPropN(props[level]);\n  if (!propertyName) {\n    return null;\n  }\n  const listeners = getOrCreateMapProperty(vm, LISTENERS);\n  let node = listeners.get(propertyName);\n  if (!node) {\n    node = new Node(vm, propertyName);\n    listeners.set(propertyName, node);\n  }\n  if (props.length - 1 === level) {\n    return node;\n  } else {\n    return loopCreateNode(node, props, level + 1);\n  }\n}\n\nfunction loopGetNode(vm, props, level = 0) {\n  const propertyName = getPropN(props[level]);\n  if (!propertyName) {\n    return null;\n  }\n  const listeners = vm[LISTENERS];\n  const node = listeners.get(propertyName);\n  if (!node) {\n    return null;\n  }\n  if (props.length - 1 === level) {\n    return node;\n  } else {\n    return loopGetNode(node, props, level + 1);\n  }\n}\n\nfunction delNode(node) {\n  if ((node[LISTENERS_HANDLERS] && node[LISTENERS_HANDLERS].length > 0) ||\n    (node[LISTENERS] && node[LISTENERS].size > 0)\n  ) {\n    return;\n  }\n  /**\n   * if one node don't have any listener or child, delete it.\n   */\n  const parent = node[LISTENERS_PARENT];\n  const id = node[LISTENERS_ID];\n  node[LISTENERS_PARENT] = null; // unlink parent.\n  parent[LISTENERS].delete(id);\n  return parent;\n}\n\nfunction loopClearNode(node, isRoot = true) {\n  const listeners = node[LISTENERS];\n  if (listeners) {\n    // loop clear all child nodes\n    listeners.forEach(sn => loopClearNode(sn, false));\n    listeners.clear();\n    node[LISTENERS] = null;\n  }\n  if (isRoot) {\n    return;\n  }\n  // destroy all handlers\n  const handlers = node[LISTENERS_HANDLERS];\n  if (handlers) {\n    // clear handler waiting to execute\n    handlers.forEach(_handleCancel);\n    handlers.length = 0;\n    node[LISTENERS_HANDLERS] = null;\n  }\n  // unlink parent\n  node[LISTENERS_PARENT] = null;\n}\n\nconst _handleTasks = new Map();\nfunction _handleCancel(handler) {\n  const t = _handleTasks.get(handler);\n  if (t) {\n    clearImmediate(t.i);\n    _handleTasks.delete(handler);\n  }\n}\nfunction _handleOnce(node, handler, propPath) {\n  if (_handleTasks.has(handler)) {\n    return;\n  }\n  const imm = setImmediate(() => {\n    const arg = _handleTasks.get(handler);\n    try {\n      handler(arg.p);\n    } finally {\n      _handleTasks.delete(handler);\n    }\n  });\n  _handleTasks.set(handler, {\n    i: imm,\n    p: propPath\n  });\n}\n\nfunction loopHandle(propPath, node) {\n  const handlers = node[LISTENERS_HANDLERS];\n  handlers && handlers.forEach(handler => {\n    _handleOnce(node, handler, propPath);\n    // imms ? _handleOnce(node, handler, propPath) : handler(propPath);\n  });\n  const listeners = node[LISTENERS];\n  listeners && listeners.forEach(c => {\n    loopHandle(propPath, c);\n  });\n}\n\nfunction loopNotify(vm, props, level = 0) {\n  const listeners = vm[LISTENERS];\n  if (!listeners) {\n    return;\n  }\n  const propertyName = getPropN(props[level]);\n  if (!propertyName) {\n    return;\n  }\n  let node = listeners.get(propertyName);\n  if (node) {\n    if (props.length - 1 === level) {\n      // loopHandle(props, node, config[CFG_VM_DEBUG] ? null : imms);\n      loopHandle(props, node);\n    } else {\n      loopNotify(node, props, level + 1);\n    }\n  }\n  node = listeners.get(LISTENERS_STAR);\n  if (node) {\n    if (props.length - 1 === level) {\n      loopHandle(props, node, null);\n    } else {\n      loopNotify(node, props, level + 1);\n    }\n  }\n  node = listeners.get(LISTENERS_DBSTAR);\n  if (node) {\n    loopHandle(props, node, null);\n  }\n}\n\nfunction getProps(prop) {\n  return isString(prop) ? (\n    prop.indexOf('.') > 0 ? prop.split('.') : [prop]\n  ) : prop;\n}\n\nexport class ViewModelAttrs {\n  constructor(host) {\n    this[VM_HOST] = host;\n    this[VM_NOTIFIABLE] = true;\n    this[VM_PROXY] = null;\n    this[PARENTS] = null;\n    this[LISTENERS] = null;\n  }\n\n  [VM_ADD_PARENT](parent, prop) {\n    const pArr = getOrCreateArrayProperty(this, PARENTS);\n    pArr.push([parent, prop]);\n  }\n\n  [VM_REMOVE_PARENT](parent, prop) {\n    const pArr = this[PARENTS];\n    if (!pArr) return;\n    const idx = pArr.findIndex(ps => ps[0] === parent && ps[1] === prop);\n    if (idx >= 0) pArr.splice(idx, 1);\n  }\n\n  [VM_SHIFT_PARENT](parent, prop, delta) {\n    const pArr = this[PARENTS];\n    if (!pArr) return;\n    const ps = pArr.find(ps => ps[0] === parent && ps[1] === prop);\n    if (ps) {\n      ps[1] += delta;\n    }\n  }\n\n  [VM_ON](prop, handler, relatedComponent) {\n    const node = loopCreateNode(this, getProps(prop));\n    if (!node) {\n      return;\n    }\n    arrayPushIfNotExist(\n      getOrCreateArrayProperty(node, LISTENERS_HANDLERS),\n      handler\n    );\n    const host = this[VM_HOST];\n    if (!relatedComponent || !(VM_RELATED_LISTENERS in relatedComponent)) {\n      return;\n    }\n    // unwrap component out of wrapper proxy\n    relatedComponent = relatedComponent[VM_ATTRS][VM_HOST];\n    if (host === relatedComponent) {\n      return;\n    }\n    vmRelatedOn(relatedComponent, host, prop, handler);\n  }\n\n  [VM_OFF](prop, handler, relatedComponent) {\n    const node = loopGetNode(this, getProps(prop));\n    if (!node) {\n      return;\n    }\n\n    const hs = node[LISTENERS_HANDLERS];\n    if (!handler) { // remove all if second parameter is not provided\n      hs.forEach(_handleCancel);\n      hs.length = 0;\n    } else {\n      _handleCancel(handler);\n      arrayRemove(hs, handler);\n    }\n\n    delNode(node);\n\n    const host = this[VM_HOST];\n    if (!relatedComponent || !(VM_RELATED_LISTENERS in relatedComponent)) {\n      return;\n    }\n    // unwrap component out of wrapper proxy\n    relatedComponent = relatedComponent[VM_ATTRS][VM_HOST];\n    if (host === relatedComponent) {\n      return;\n    }\n    vmRelatedOff(relatedComponent, host, prop, handler);\n  }\n\n  [VM_NOTIFY](prop) {\n    if (!this[VM_NOTIFIABLE]) {\n      return;\n    }\n    const props = getProps(prop);\n    if (this[LISTENERS]) {\n      loopNotify(this, props);\n    }\n    const pArr = this[PARENTS];\n    pArr && pArr.forEach(ps => {\n      const vmAttrs = ps[0][VM_ATTRS];\n      if (!vmAttrs) {\n        console.error('dev-warn-unexpected: parent of ViewModelAttrs has been destroied but not unlink.');\n        return;\n      }\n      vmAttrs[VM_NOTIFY](\n        [ps[1]].concat(props)\n      );\n    });\n  }\n\n  [VM_DESTROY](unlinkHostProperties = true) {\n    // mark as non-notifiable\n    this[VM_NOTIFIABLE] = false;\n    // clear assignment parents\n    const pArr = this[PARENTS];\n    pArr && (pArr.length = 0);\n    this[PARENTS] = null;\n    // clear listeners\n    loopClearNode(this);\n    // unlink host object wrapper proxy\n    this[VM_PROXY] = null;\n\n    const host = this[VM_HOST];\n\n    // destroy related listeners\n    if (VM_RELATED_LISTENERS in host) {\n      vmRelatedClear(host[VM_RELATED_LISTENERS]);\n      host[VM_RELATED_LISTENERS] = null;\n    }\n    // unlink vm host\n    this[VM_HOST] = null;\n    /*\n     * by default, we will reset VM_HOST object's all public properties to null\n     *   to remove VM_HOST object from old property value's VM_PARENTS\n     *\n     * 默认情况下（即 === true），会将 VM_HOST 对象的所有（不以 '_' 打头的）公共属性重置为 null，这个赋值会触发 ./proxy.js 中的逻辑，\n     *   将该对\b象从属性原来的值的 VM_PARENTS 中移除，从而达到解除 ViewModel 之间的关联，回收资源和防止潜在 bug 的目的。\n     *\n     * 当 VM 对象是某个类的实例时，由于类可以通过 setter 函数定义公共属性，而这一类的公共属性不能\n     *   通过 getOwnPropertyNames 来遍历。因此这种情况，需要主动传递 unlinkHostProperties = false\n     *   来禁用默认的重置属性逻辑，然后自己处理相关的重置逻辑。比如 Component 组件。\n     */\n    unlinkHostProperties && getOwnPropertyNames(host, prop => {\n      if (prop.charCodeAt(0) === 95) {\n        return;\n      }\n      const v = host[prop];\n      if (!isObject(v)) {\n        return;\n      }\n      const a = v[VM_ATTRS];\n      a && a[VM_REMOVE_PARENT](host, prop);\n      host[prop] = null;\n    });\n  }\n}\n\nfunction vmRelatedOn(relatedComponent, hostViewModel, prop, handler) {\n  const rvl = getOrCreateMapProperty(relatedComponent, VM_RELATED_LISTENERS);\n  let hook = rvl.get(hostViewModel);\n  if (!hook) {\n    hook = [];\n    rvl.set(hostViewModel, hook);\n  }\n  hook.push([prop, handler]);\n}\n\nfunction vmRelatedOff(relatedComponent, hostViewModel, prop, handler) {\n  const rvl = relatedComponent[VM_RELATED_LISTENERS];\n  if (!rvl) return;\n  const hook = rvl.get(hostViewModel);\n  if (!hook) return;\n  const isPropArray = isArray(prop);\n  const i = hook.findIndex(it => {\n    return handler === it[1] &&\n      (isPropArray\n        ? arrayEqual(prop, it[0])\n        : prop === it[0]\n      );\n  });\n  if (i >= 0) {\n    hook.splice(i, 1);\n  }\n}\n\nexport function vmRelatedClear(relatedListeners) {\n  if (!relatedListeners) return;\n  relatedListeners.forEach((arr, component) => {\n    arr.forEach(hook => {\n      component[VM_ATTRS][VM_OFF](hook[0], hook[1]);\n    });\n    arr.length = 0;\n  });\n  relatedListeners.clear();\n}\n\nexport class RelatedListenersStore {\n  constructor() {\n    /**\n     * VM_ON/VM_OFF 绑定属性监听接受三个参数，其中第三个参数为关联组件。\n     *   当关联组件被销毁时，可以同时销毁保存在其 VM_RELATED_LISTENERS 中的父亲 ViewModel 的\n     *   属性监听函数（参看 ../core/component.js 里 VM_RELATED_LISTENERS 的注释）。\n     *\n     * 在多语言国际化方案中，当 attrs 渲染函数代码被提取到独立的多语言资源文件后，除了关联组件被销毁时需要销毁父 ViewModel 的属性监听，\n     *   当 locale 发生变化时，这些监听函数也要销毁。为了实现这个目标，采用了一个取巧的思路，传递一个模拟的关联组件，\n     *   即 RelatedListenersStore 来存储 VM_RELATED_LISTENERS。\n     *\n     * 以下的 VM_RELATED_LISTENERS 和 VM_ATTRS 的定义就是为了实现该模拟，使得\n     *   VM_ON/VM_OFF 函数可以正常执行关联组件的逻辑。\n     */\n    this[VM_RELATED_LISTENERS] = null;\n    this[VM_ATTRS] = {\n      [VM_HOST]: this\n    };\n  }\n\n  // destroy\n  d() {\n    vmRelatedClear(this[VM_RELATED_LISTENERS]);\n    this[VM_RELATED_LISTENERS] = null;\n  }\n}\n\nexport function vmWatch(vm, prop, handler) {\n  const vmAttrs = vm[VM_ATTRS];\n  if (!vmAttrs) {\n    throw new Error('vmWatch require ViewModel object');\n  }\n  let dbStarIdx = -1;\n  const props = getProps(prop).map((p, i) => {\n    if (p === '**') {\n      dbStarIdx = i;\n      return LISTENERS_DBSTAR;\n    }\n    return p === '*' ? LISTENERS_STAR : p;\n  });\n  if (dbStarIdx >= 0 && dbStarIdx !== props.length - 1) {\n    /**\n     * 'a.b.**' is good.\n     * 'a.b.**.c' is bad.\n     */\n    throw new Error('wizard \"**\" must be last element in path.');\n  }\n  vmAttrs[VM_ON](props, handler);\n}\n\nexport function vmUnwatch(vm, prop, handler) {\n  const vmAttrs = vm[VM_ATTRS];\n  if (!vmAttrs[VM_NOTIFIABLE]) {\n    return;\n  }\n  if (!prop) {\n    loopClearNode(vmAttrs);\n  } else {\n    vmAttrs[VM_OFF](prop, handler);\n  }\n}\n","import {\n  Symbol,\n  isNumber,\n  isArray,\n  isObject,\n  STR_LENGTH,\n  isFunction,\n  isPromise,\n  isUndefined,\n  getOrCreateMapProperty,\n  assertFail\n} from '../util';\nimport {\n  isInnerObj,\n  isPublicProp,\n  ViewModelAttrs,\n  VM_ATTRS,\n  VM_PROXY,\n  VM_NOTIFY,\n  VM_NOTIFIABLE,\n  isViewModel,\n  VM_ADD_PARENT,\n  VM_REMOVE_PARENT,\n  VM_SHIFT_PARENT\n} from './core';\n\nexport const VM_SETTER_FN_MAP = Symbol();\n\n/**\n * check if property named \"prop\" is setter of instance \"obj\",\n * if it's setter, return setter function, otherwise return null.\n * @param {Object} obj\n * @param {String} prop\n *\n * 检测名称为 \"prop\" 的属性是否是 setter，如果是，返回该 setter 函数，\n * 否则，返回 null。\n * 由于 obj 可能是有继承关系的类的实例，因此需要向上检测继承的类的 prototype。\n */\nfunction getSetterFnIfPropIsSetter(obj, prop) {\n  const map = getOrCreateMapProperty(obj, VM_SETTER_FN_MAP);\n  if (!map.has(prop)) {\n    let clazz = obj.constructor;\n    let desc = Object.getOwnPropertyDescriptor(clazz.prototype, prop);\n    let fn;\n    if (desc) {\n      fn = isFunction(desc.set) ? desc.set : null;\n      map.set(prop, fn);\n      return fn;\n    }\n    // lookup to check parent classes\n    clazz = Object.getPrototypeOf(clazz);\n    while (clazz && clazz.prototype) {\n      desc = Object.getOwnPropertyDescriptor(clazz.prototype, prop);\n      if (desc) {\n        fn = isFunction(desc.set) ? desc.set : null;\n        map.set(prop, fn);\n        return fn;\n      }\n      clazz = Object.getPrototypeOf(clazz);\n    }\n    map.set(prop, null);\n    return null;\n  } else {\n    return map.get(prop);\n  }\n}\n\nfunction notifyPropChanged(vm, prop) {\n  vm[VM_ATTRS][VM_NOTIFY](prop);\n}\n\nfunction __propSetHandler(target, prop, value, setFn) {\n  if (!isPublicProp(prop)) {\n    target[prop] = value;\n    return true;\n  }\n  const oldVal = target[prop];\n  if (oldVal === value && !isUndefined(value)) {\n    return true;\n  }\n  const newValIsVM = isObject(value) && !isInnerObj(value);\n  if (newValIsVM && !(VM_ATTRS in value)) {\n    throw new Error(`public property \"${prop}\" of ViewModel must also be ViewModel`);\n  }\n  // console.log(`'${prop}' changed from ${store[prop]} to ${value}`);\n  if (isObject(oldVal)) {\n    const a = oldVal[VM_ATTRS];\n    a && a[VM_REMOVE_PARENT](target, prop);\n  }\n  setFn(target, prop, value);\n  if (newValIsVM) {\n    value[VM_ATTRS][VM_ADD_PARENT](target, prop);\n  }\n  notifyPropChanged(target, prop);\n  return true;\n}\n\nfunction __objectPropSetFn(target, prop, value) {\n  target[prop] = value;\n}\n\nfunction __componentPropSetFn(target, prop, value) {\n  /**\n   * we must ensure `this` in setter function to be `Proxy`\n   *\n   * 首先判断当前赋值的变量名，是否对应了一个 setter 函数，\n   * 如果是 setter 函数，则应该显式地调用，\n   *   并将 `this` 设置为该 target 的包装 Proxy，\n   *   这样才能保正 setter 函数中其它赋值语句能触发 notify。\n   * 如果不是 setter 函数，则简单地使用 target\\[prop\\] 赋值即可。\n   */\n  const setterFn = getSetterFnIfPropIsSetter(target, prop);\n  if (setterFn) {\n    setterFn.call(target[VM_ATTRS][VM_PROXY], value);\n  } else {\n    target[prop] = value;\n  }\n}\n\nfunction objectPropSetHandler(target, prop, value) {\n  if (!target[VM_ATTRS]) {\n    // ViewModel has been destroied.\n    return true;\n  }\n  return __propSetHandler(target, prop, value, __objectPropSetFn);\n}\n\nfunction componentPropSetHandler(target, prop, value) {\n  if (!target[VM_ATTRS]) {\n    console.warn(`call setter \"${prop.toString()}\" after destroied, resources such as setInterval maybe not released before destroy. component:`, target);\n    return true;\n  }\n  return __propSetHandler(target, prop, value, __componentPropSetFn);\n}\n\nfunction arrayPropSetHandler(target, prop, value) {\n  if (prop === STR_LENGTH) {\n    return arrayLengthSetHandler(target, value);\n  }\n  return objectPropSetHandler(target, prop, value);\n}\n\nfunction arrayNotifyItems(target, idxStart, idxEnd) {\n  let i = idxStart;\n  if (idxStart > idxEnd) {\n    i = idxEnd;\n    idxEnd = idxStart;\n  }\n  for (; i < idxEnd; i++) {\n    // console.log('npc', i);\n    notifyPropChanged(target, i);\n  }\n}\n\nfunction arrayLengthSetHandler(target, value) {\n  if (!isNumber(value)) throw new Error('bad argument. array length must be validate number.');\n  const oldLen = target.length;\n  if (oldLen > value) {\n    for (let i = value; i < oldLen; i++) {\n      const v = target[i];\n      isViewModel(v) && v[VM_ATTRS][VM_REMOVE_PARENT](target, i);\n    }\n  }\n  target.length = value;\n  // console.log('set .length from', oldLen, 'to', value);\n  if (oldLen !== value) {\n    notifyPropChanged(target, STR_LENGTH);\n    arrayNotifyItems(target, oldLen, value);\n  }\n  return true;\n}\n\nexport const ObjectProxyHandler = {\n  set: objectPropSetHandler\n};\n\nexport const ComponentProxyHandler = {\n  set: componentPropSetHandler\n};\n\nexport const PromiseProxyHandler = {\n  get(target, prop) {\n    if (prop === 'then' || prop === 'catch') {\n      const v = target[prop];\n      return function(...args) {\n        return v.call(target, ...args);\n      };\n    } else {\n      return target[prop];\n    }\n  },\n  set: objectPropSetHandler\n};\n\nfunction _arrayFill(target, v) {\n  target.forEach((it, i) => {\n    if (it === v && !isUndefined(it)) {\n      return;\n    }\n    if (isViewModel(it)) {\n      it[VM_ATTRS][VM_REMOVE_PARENT](target, i);\n    }\n    target[i] = v;\n    if (isViewModel(it)) {\n      it[VM_ATTRS][VM_ADD_PARENT](target, i);\n    }\n    notifyPropChanged(target, i);\n  });\n  return target[VM_ATTRS][VM_PROXY];\n}\n\nfunction _arrayReverseSort(target, fn, arg) {\n  target.forEach((it, i) => {\n    if (isViewModel(it)) {\n      it[VM_ATTRS][VM_ADD_PARENT](target, i);\n    }\n  });\n  target[fn](arg);\n  target.forEach((it, i) => {\n    if (isViewModel(it)) {\n      it[VM_ATTRS][VM_REMOVE_PARENT](parent, i);\n    }\n  });\n  arrayNotifyItems(target, 0, target.length);\n  // return wrapper proxy to ensure `arr.reverse() === arr`\n  return target[VM_ATTRS][VM_PROXY];\n}\n\nfunction _arrayWrapSub(arr, wrapEachItem = false) {\n  const rtn = wrapProxy(arr, true);\n  // handleVMDebug(arr);\n  arr.forEach((it, i) => {\n    if (isViewModel(it)) {\n      it[VM_ATTRS][VM_ADD_PARENT](arr, i);\n    } else if (wrapEachItem) {\n      arr[i] = loopWrapVM(it);\n    }\n  });\n  return rtn;\n}\n\nfunction _arrayShiftOrUnshiftProp(arr, delta) {\n  arr.forEach((el, i) => {\n    if (!isViewModel(el)) return;\n    el[VM_ATTRS][VM_SHIFT_PARENT](arr, i, delta);\n  });\n}\n\nfunction _argAssert(arg, fn) {\n  if (isObject(arg)) {\n    if (!(VM_ATTRS in arg)) {\n      throw new Error(`argument passed to Array.${fn} must be ViewModel if the array is ViewModel`);\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n}\n\nconst ArrayFns = {\n  splice(target, idx, delCount, ...args) {\n    if (idx < 0) idx = 0;\n    args.forEach((arg, i) => {\n      if (_argAssert(arg, 'splice')) {\n        arg[VM_ATTRS][VM_ADD_PARENT](target, idx + i);\n      }\n    });\n    for (let i = 0; i < delCount; i++) {\n      if (idx + i >= target.length) break;\n      const el = target[idx + i];\n      if (isViewModel(el)) {\n        el[VM_ATTRS][VM_REMOVE_PARENT](target, idx + i);\n      }\n    }\n    const delta = args.length - delCount;\n    if (delta !== 0) {\n      for (let i = idx + delCount; i < target.length; i++) {\n        const el = target[i];\n        if (!isViewModel(el)) continue;\n        el[VM_ATTRS][VM_SHIFT_PARENT](target, i, delta);\n      }\n    }\n    const rtn = _arrayWrapSub(target.splice(idx, delCount, ...args));\n    if (delta !== 0) {\n      notifyPropChanged(target, STR_LENGTH);\n      for (let i = idx; i < target.length; i++) {\n        notifyPropChanged(target, i);\n      }\n    }\n    return rtn;\n  },\n  shift(target) {\n    if (target.length === 0) return target.shift();\n    _arrayShiftOrUnshiftProp(target, -1);\n    const el = target.shift();\n    if (isViewModel(el)) {\n      el[VM_ATTRS][VM_REMOVE_PARENT](target, -1);\n    }\n    notifyPropChanged(target, STR_LENGTH);\n    for (let i = 0; i < target.length + 1; i++) {\n      notifyPropChanged(target, i);\n    }\n    return el;\n  },\n  unshift(target, ...args) {\n    if (args.length === 0) return target.unshift();\n    args.forEach((arg, i) => {\n      if (_argAssert(arg, 'unshift')) {\n        arg[VM_ATTRS][VM_ADD_PARENT](target, i);\n      }\n    });\n    _arrayShiftOrUnshiftProp(target, args.length);\n    const rtn = target.unshift(...args);\n    notifyPropChanged(target, STR_LENGTH);\n    for (let i = 0; i < target.length; i++) {\n      notifyPropChanged(target, i);\n    }\n    return rtn;\n  },\n  pop(target) {\n    if (target.length === 0) {\n      return target.pop();\n    }\n    const el = target.pop();\n    if (isViewModel(el)) {\n      el[VM_ATTRS][VM_REMOVE_PARENT](target, target.length);\n    }\n    notifyPropChanged(target, STR_LENGTH);\n    notifyPropChanged(target, target.length);\n    return el;\n  },\n  push(target, ...args) {\n    if (args.length === 0) return target.push();\n    args.forEach((arg, i) => {\n      if (_argAssert(arg, 'push')) {\n        arg[VM_ATTRS][VM_ADD_PARENT](target, target.length + i);\n      }\n    });\n    const rtn = target.push(...args);\n    notifyPropChanged(target, STR_LENGTH);\n    for (let i = target.length - 1 - args.length; i < target.length; i++) {\n      notifyPropChanged(target, i);\n    }\n    return rtn;\n  },\n  fill(target, v) {\n    _argAssert(v, 'fill');\n    return _arrayFill(target, v);\n  },\n  reverse(target) {\n    return _arrayReverseSort(target, 'reverse');\n  },\n  sort(target, fn) {\n    return _arrayReverseSort(target, 'sort', fn);\n  },\n  concat(target, arr) {\n    _argAssert(arr, 'concat');\n    return _arrayWrapSub(target.concat(arr));\n  },\n  filter(target, fn) {\n    return _arrayWrapSub(target.filter(fn));\n  },\n  slice(target, si, ei) {\n    return _arrayWrapSub(target.slice(si, ei));\n  },\n  map(target, fn) {\n    return _arrayWrapSub(target.map(fn), true);\n  }\n};\n\nexport const ArrayProxyHandler = {\n  get(target, prop) {\n    if (prop in ArrayFns) {\n      const fn = ArrayFns[prop];\n      return function(...args) {\n        return fn(target, ...args);\n      };\n    } else {\n      return target[prop];\n    }\n  },\n  set: arrayPropSetHandler\n};\n\nfunction wrapProp(vm, prop) {\n  const v = vm[prop];\n  if (!isObject(v) || isInnerObj(v)) {\n    return;\n  }\n  if (VM_ATTRS in v) {\n    v[VM_ATTRS][VM_ADD_PARENT](vm, prop);\n    return;\n  }\n  vm[prop] = loopWrapVM(v);\n  v[VM_ATTRS][VM_ADD_PARENT](vm, prop);\n}\n\nfunction wrapProxy(vm, isArr) {\n  const vmAttrs = new ViewModelAttrs(vm);\n  vm[VM_ATTRS] = vmAttrs;\n  const p = new Proxy(vm, isArr ? ArrayProxyHandler : (\n    isPromise(vm) ? PromiseProxyHandler : ObjectProxyHandler\n  ));\n  vmAttrs[VM_PROXY] = p;\n  return p;\n}\n\nfunction loopWrapVM(plainObjectOrArray) {\n  if (isObject(plainObjectOrArray)) {\n    // directly return if alreay is ViewModel or inner object(Date/RegExp/Boolean).\n    if (isInnerObj(plainObjectOrArray) || (VM_ATTRS in plainObjectOrArray)) {\n      return plainObjectOrArray;\n    }\n\n    if (isArray(plainObjectOrArray)) {\n      for (let i = 0; i < plainObjectOrArray.length; i++) {\n        wrapProp(plainObjectOrArray, i);\n      }\n      return wrapProxy(plainObjectOrArray, true);\n    } else {\n      for (const k in plainObjectOrArray) {\n        if (isPublicProp(k)) {\n          wrapProp(plainObjectOrArray, k);\n        }\n      }\n      return wrapProxy(plainObjectOrArray, false);\n    }\n  } else {\n    return plainObjectOrArray;\n  }\n}\n\nexport function wrapViewModel(plainObjectOrArray) {\n  const vm = loopWrapVM(plainObjectOrArray);\n  // if (vm !== plainObjectOrArray) {\n  //   handleVMDebug(plainObjectOrArray);\n  // }\n  return vm;\n}\n\n// alias for convenient\nexport const VM = wrapViewModel;\n\n// function handleVMDebug(vm) {\n//   if (!config[CFG_VM_DEBUG]) {\n//     return;\n//   }\n//   let _di = window._VM_DEBUG;\n//   if (!_di) {\n//     _di = window._VM_DEBUG = {\n//       id: 0, vms: []\n//     };\n//   }\n//   vm[VM_DEBUG_ID] = _di.id++;\n//   // if (isComponent(vm) && !(VM_DEBUG_NAME in vm)) {\n//   //   vm[VM_DEBUG_NAME] = `<${vm.constructor.name}>`;\n//   // }\n//   _di.vms.push(vm);\n// }\n\nexport function wrapComponent(component) {\n  if (component[VM_ATTRS]) {\n    throw new Error('alreay wraped.');\n  }\n  // handleVMDebug(component);\n  const vmAttrs = new ViewModelAttrs(component);\n  // 初始化时 Component 默认的 VM_NOTIFIABLE 为 false，\n  // 待 RENDER 结束后才修改为 true，用于避免无谓的消息通知。\n  vmAttrs[VM_NOTIFIABLE] = false;\n  component[VM_ATTRS] = vmAttrs;\n  const p = new Proxy(component, ComponentProxyHandler);\n  vmAttrs[VM_PROXY] = p;\n  return p;\n}\n\nexport function wrapAttrs(attrsObj) {\n  if (!isObject(attrsObj)) {\n    assertFail();\n  }\n  for (const k in attrsObj) {\n    if (isPublicProp(k)) {\n      const v = attrsObj[k];\n      if (isObject(v) && !isInnerObj(v) && !(VM_ATTRS in v)) {\n        throw new Error(`value passed to attribute \"${k}\" must be ViewModel.`);\n      }\n    }\n  }\n  const attrs = wrapProxy(attrsObj, false);\n  // 初始化时 Component 默认的 VM_NOTIFIABLE 为 false，\n  // 待 RENDER 结束后才修改为 true，用于避免无谓的消息通知。\n  attrs[VM_ATTRS][VM_NOTIFIABLE] = false;\n  return attrs;\n}\n","export * from './core';\nexport * from './proxy';\n","import {\n  Symbol,\n  getOrCreateArrayValueOfMap,\n  getOrCreateMapProperty\n} from '../util';\n\nexport const LISTENERS = Symbol();\n\nexport function notifyHelper(listenersMap, notifyKey, ...notifyArgs) {\n  if (!listenersMap) return;\n  const listeners = listenersMap.get(notifyKey);\n  if (!listeners) return;\n  listeners.forEach(handler => handler(...notifyArgs));\n}\n\nexport function onHelper(listenersMap, notifyKey, listener) {\n  const listeners = getOrCreateArrayValueOfMap(listenersMap, notifyKey);\n  if (listeners.indexOf(listener) < 0) {\n    listeners.push(listener);\n  }\n}\n\nexport function offHelper(listenersMap, notifyKey, listener) {\n  if (!listenersMap) return;\n  if (!notifyKey) {\n    listenersMap.forEach(ls => {\n      ls.length = 0;\n    });\n    listenersMap.clear();\n    return;\n  }\n  const listeners = listenersMap.get(notifyKey);\n  if (!listeners) return;\n  if (!listener) {\n    listeners.length = 0; // clear all if listener is not provided\n    return;\n  }\n  const idx = listeners.indexOf(listener);\n  if (idx < 0) return;\n  listeners.splice(idx, 1);\n}\n\nexport function clearHelper(listenersMap, notifyKey) {\n  if (!listenersMap) return;\n  if (!notifyKey) {\n    listenersMap.clear();\n  } else {\n    listenersMap.delete(notifyKey);\n  }\n}\n\nexport function onceHelper(listenersMap, notifyKey, listener) {\n  function onceListener(...args) {\n    listener(...args);\n    offHelper(listenersMap, notifyKey, onceListener);\n  }\n  onHelper(listenersMap, notifyKey, onceListener);\n}\n\nexport const NOTIFY = Symbol();\nexport const ON = Symbol();\nexport const OFF = Symbol();\nexport const CLEAR = Symbol();\n\nexport class Messenger {\n  /**\n   * Listeners compiled from template.\n   * @param {Object} templateListeners\n   */\n  constructor(templateListeners) {\n    this[LISTENERS] = null;\n    if (templateListeners) {\n      for (const eventName in templateListeners) {\n        this[ON](eventName, ...templateListeners[eventName]);\n      }\n    }\n  }\n\n  [NOTIFY](eventName, ...args) {\n    notifyHelper(this[LISTENERS], eventName, ...args);\n  }\n\n  [ON](eventName, eventListener, opts) {\n    const listeners = getOrCreateMapProperty(this, LISTENERS);\n    if (opts) {\n      eventListener.tag = opts;\n    }\n    if (opts && opts.once) {\n      onceHelper(listeners, eventName, eventListener);\n    } else {\n      onHelper(listeners, eventName, eventListener);\n    }\n  }\n\n  [OFF](eventName, eventListener) {\n    offHelper(this[LISTENERS], eventName, eventListener);\n  }\n\n  [CLEAR](eventName) {\n    clearHelper(this[LISTENERS], eventName);\n  }\n}\n\n/**\n * pass all listeners on srcMessenger to dstMessenger\n * @param {Messenger} srcMessenger\n * @param {Messenger} dstMessenger\n */\nexport function passListeners(srcMessenger, dstMessenger) {\n  if (!(LISTENERS in srcMessenger) || !(LISTENERS in dstMessenger)) {\n    // src or dst is not instance of Messenger\n    return;\n  }\n  const srcLis = srcMessenger[LISTENERS];\n  if (!srcLis) return;\n  srcLis.forEach((lis, key) => {\n    const dstLis = getOrCreateMapProperty(dstMessenger, LISTENERS);\n    lis.forEach(listener => {\n      const tag = listener.tag;\n      if (tag && tag.once) {\n        onceHelper(dstLis, key, listener);\n      } else {\n        onHelper(dstLis, key, listener);\n      }\n    });\n  });\n}\n","import {\n  Symbol,\n  uid,\n  createEmptyObject,\n  assignObject,\n  createElement,\n  appendChild,\n  getCSPropertyValue\n} from '../util';\n\nexport const CSTYLE_PID = Symbol();\nexport const CSTYLE_ADD = Symbol();\nexport const CSTYLE_DEL = Symbol();\nexport const CSTYLE_ATTACH = Symbol();\n\nexport function addParentStyleId(component, inheritIds, styleId) {\n  if (!inheritIds && !styleId) return;\n  let ids = component[CSTYLE_PID];\n  if (!ids) {\n    ids = component[CSTYLE_PID] = createEmptyObject();\n  }\n  if (inheritIds) {\n    assignObject(ids, inheritIds);\n  }\n  if (styleId) {\n    ids[styleId] = '';\n  }\n}\n\nfunction isHideCssExists() {\n  const $e = createElement('span', {\n    style: 'position:absolute;left:-10000px;',\n    class: 'jg-hide'\n  });\n  appendChild(document.body, $e);\n  return getCSPropertyValue(getComputedStyle($e), 'display') === 'none';\n}\n\nclass ComponentStyleManager {\n  constructor() {\n    this.m = new Map();\n    /**\n     * State\n     * 0: not attached\n     * 1: attached\n     */\n    this.s = 0;\n  }\n\n  _c(sty) {\n    if (this.s === 0) return;\n    const $style = createElement('style', {\n      type: 'text/css',\n      id: sty.dom\n    });\n    appendChild(document.head, $style);\n    if ($style.styleSheet) {\n      $style.styleSheet.cssText = sty.css;\n    } else {\n      $style.textContent = sty.css;\n    }\n  }\n\n  [CSTYLE_ADD](sty) {\n    if (!sty) return;\n    const styleMap = this.m;\n    let info = styleMap.get(sty.id);\n    if (info) {\n      info.refs++;\n      return;\n    }\n    info = {\n      id: sty.id,\n      css: sty.css,\n      dom: `__${sty.id}__`,\n      refs: 1\n    };\n    styleMap.set(sty.id, info);\n    this._c(info);\n  }\n\n  [CSTYLE_ATTACH]() {\n    if (this.s !== 0) return;\n    this.s = 1;\n    if (!isHideCssExists()) {\n      this._c({\n        dom: `__jgsty_${uid()}__`,\n        css: '.jg-hide{display:none!important}.jg-hide.jg-hide-enter,.jg-hide.jg-hide-leave{display:block!important}'\n      });\n    }\n    this.m.forEach(info => this._c(info));\n  }\n\n  [CSTYLE_DEL](sty) {\n    if (!sty) return;\n    const info = this.m.get(sty.id);\n    if (!info) return;\n    info.refs--;\n    if (info.refs > 0) {\n      return;\n    }\n    this.m.delete(info.id);\n    if (this.s === 0) return;\n    document.head.removeChild(\n      document.getElementById(info.dom)\n    );\n  }\n}\n\n// singleton\nexport const manager = new ComponentStyleManager();\n","import {\n  Symbol,\n  isString,\n  uid,\n  isFunction\n} from '../util';\nimport {\n  Messenger,\n  NOTIFY,\n  ON,\n  OFF\n} from './messenger';\n\nexport const I18N_GET_RENDER = Symbol();\nexport const I18N_GET_TEXT = Symbol();\nexport const I18N_GET_ATTR = Symbol();\nexport const I18N_LOCALE_CHANGE = Symbol();\nexport const I18N_SWITCH_LOCALE = Symbol();\nexport const I18N_REGISTER_DEPS = Symbol();\nexport const I18N_CURRENT_LOCALE = Symbol();\n\nconst DEP_FNS = Symbol();\nconst LAST_FETCHING_KEY = Symbol();\nconst CURRENT_DATA = Symbol();\nconst CACHE = Symbol();\n\nfunction compile(text) {\n  // eslint-disable-next-line no-new-func\n  return new Function('__ctx', `return \\`${text.replace(/\\$\\{\\s*([\\w\\d._$]+)\\s*\\}/g, (m, n) => {\n    return '${ __ctx.' + n + ' }';\n  })}\\`;`);\n}\n\nfunction defaultFetchFn(locale) {\n  return window.fetch('dist/locale.' + locale + '.js').then(res => res.text());\n}\n\nclass I18nService extends Messenger {\n  constructor(attrs) {\n    super(attrs);\n    this[DEP_FNS] = null;\n    this[CURRENT_DATA] = null;\n    this[CACHE] = new Map();\n    this[LAST_FETCHING_KEY] = null;\n\n    this.r(window.JINGE_I18N_DATA);\n  }\n\n  get locale() {\n    return this[CURRENT_DATA].locale;\n  }\n\n  /**\n   * Register locale data, will be called in locale resource script.\n   * Usually you don't need call this method manully.\n   */\n  r(data) {\n    if (!data || this[CACHE].has(data.locale)) {\n      return;\n    }\n    this[CACHE].set(data.locale, data);\n    if (!this[CURRENT_DATA]) {\n      this[CURRENT_DATA] = data;\n    }\n  }\n\n  /**\n   * This method is used only for compiler auto generated code.\n   * Don't call it manually!\n   */\n  [I18N_REGISTER_DEPS](depFns) {\n    if (this[DEP_FNS]) {\n      console.warn('register i18n render dependent functions multiply times.');\n      return;\n    }\n    this[DEP_FNS] = depFns;\n  }\n\n  /**\n   * switch to another locale/language\n   * @param {String} locale locale to swtiched\n   * @param {Function} fetchFn a function to fetch locale resource script.\n   */\n  switch(locale, fetchFn = defaultFetchFn) {\n    if (this[CURRENT_DATA].locale === locale) {\n      return;\n    }\n    const data = this[CACHE].get(locale);\n    if (!data) {\n      if (fetchFn) {\n        const key = uid();\n        this[LAST_FETCHING_KEY] = key;\n        fetchFn(locale).then(code => {\n          // eslint-disable-next-line no-new-func\n          (new Function('JINGE_I18N_SERVICE', code))(this);\n          if (this[LAST_FETCHING_KEY] !== key || this[CURRENT_DATA].locale === locale) {\n            /*\n             * ignore if callback has been expired.\n             * 使用闭包的技巧来检测当前回调是否已经过期，\n             * 即，是否已经有新的 fetchFn 函数的调用。\n             */\n            return;\n          }\n          const data = this[CACHE].get(locale);\n          this[CURRENT_DATA] = data;\n          this[NOTIFY](I18N_LOCALE_CHANGE, this.locale);\n        });\n      } else {\n        throw new Error(`i18n data of \"${locale}\" is not found. `);\n      }\n    } else {\n      this[CURRENT_DATA] = data;\n      this[NOTIFY](I18N_LOCALE_CHANGE, this.locale);\n    }\n  }\n\n  [I18N_GET_TEXT](key, params) {\n    const dict = this[CURRENT_DATA].dictionary;\n    if (!(key in dict)) {\n      return 'i18n_missing';\n    }\n    let text = dict[key];\n    if (isString(text)) {\n      // text.startsWith(\"«\") means reference to another key\n      if (text.charCodeAt(0) === 171) {\n        text = dict[text.substring(1)];\n      } else {\n        text = compile(text);\n      }\n      dict[key] = text;\n    }\n    return text(params);\n  }\n\n  [I18N_GET_RENDER](key) {\n    return getRenderOrAttr(this[CURRENT_DATA], this[DEP_FNS], 'render', key);\n  }\n\n  [I18N_GET_ATTR](key) {\n    return getRenderOrAttr(this[CURRENT_DATA], this[DEP_FNS], 'attribute', key);\n  }\n\n  /**\n   * Bind listener to LOCALE_CHANGE event,\n   * return a function auto remove this listener\n   * @param {Function} handler a listener bind to LOCALE_CHANGE event\n   * @param {Boolean} immediate call listener immediately, default is false.\n   * @returns {Function} a function auto remove listener\n   */\n  watch(listener, immediate) {\n    this[ON](I18N_LOCALE_CHANGE, listener);\n    if (immediate) listener(this.locale);\n    return function unwatcher() {\n      this[OFF](I18N_LOCALE_CHANGE, listener);\n    };\n  }\n}\n\nfunction getRenderOrAttr(data, depFns, type, key) {\n  let renderOrAttr = data[type];\n  if (isFunction(renderOrAttr)) {\n    data[type] = renderOrAttr = (depFns ? renderOrAttr(...depFns[type]) : {});\n  }\n  if (!(key in renderOrAttr)) {\n    throw new Error(`missing i18n ${type} for key: ${key}`);\n  }\n  let fn = renderOrAttr[key];\n  if (isString(fn)) {\n    // if fn is string, it's a reference to another key.\n    renderOrAttr[key] = fn = renderOrAttr[fn];\n  }\n  return fn;\n}\n\n/* Singleton */\nexport const i18n = new I18nService();\n\n/**\n * Compiler helper function, the first parameter will be convert to i18n dictionary key,\n * and the whole function will be transform to `i18nService[GET_TEXT](key, params)`\n *\n * But after i18n locale resource script had been written, compiler won't transform it,\n * the function will work as text parse util.\n *\n * @param {String|Object} text\n * @param {Object} params\n */\nexport function _t(text, params) {\n  return params ? compile(text)(params) : text;\n}\n","import {\n  Symbol,\n  isDOMNode,\n  assertFail,\n  isFunction,\n  STR_DEFAULT,\n  isObject,\n  isArray,\n  createEmptyObject,\n  setImmediate,\n  clearImmediate,\n  assignObject,\n  BEFORE_DESTROY_EVENT_NAME,\n  AFTER_RENDER_EVENT_NAME,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  arrayRemove,\n  getOrCreateMapProperty,\n  getOrCreateArrayProperty,\n  getParent,\n  removeChild,\n  replaceChild,\n  appendChild,\n  registerEvent\n} from '../util';\nimport {\n  VM_ATTRS,\n  VM_DESTROY,\n  VM_NOTIFIABLE,\n  VM_REMOVE_PARENT,\n  VM_HOST,\n  VM_RELATED_LISTENERS,\n  wrapComponent,\n  VM_SETTER_FN_MAP\n} from '../vm';\nimport {\n  Messenger,\n  LISTENERS,\n  CLEAR,\n  NOTIFY\n} from './messenger';\nimport {\n  manager as StyleManager,\n  CSTYLE_PID,\n  CSTYLE_ADD,\n  CSTYLE_DEL,\n  CSTYLE_ATTACH\n} from './style';\nimport {\n  i18n as i18nService\n} from './i18n';\n\nexport const NOTIFY_TRANSITION = Symbol();\nexport const TEMPLATE_RENDER = Symbol();\nexport const RENDER = Symbol();\nexport const RENDER_TO_DOM = Symbol();\nexport const ARG_COMPONENTS = Symbol();\nexport const PASSED_ATTRS = Symbol();\nexport const CLONE = Symbol();\nexport const DESTROY = Symbol();\nexport const CONTEXT = Symbol();\nexport const CONTEXT_STATE = Symbol();\nexport const ROOT_NODES = Symbol();\nexport const NON_ROOT_COMPONENT_NODES = Symbol();\nexport const REF_NODES = Symbol();\nexport const SET_REF_NODE = Symbol();\nexport const REF_BELONGS = Symbol();\nexport const RELATED_DOM_REFS = Symbol();\nexport const GET_STATE_NAME = Symbol();\nexport const AFTER_RENDER = Symbol();\nexport const HANDLE_AFTER_RENDER = Symbol();\nexport const HANDLE_BEFORE_DESTROY = Symbol();\nexport const GET_FIRST_DOM = Symbol();\nexport const GET_LAST_DOM = Symbol();\nexport const GET_TRANSITION_DOM = Symbol();\nexport const BEFORE_DESTROY = Symbol();\nexport const GET_CONTEXT = Symbol();\nexport const SET_CONTEXT = Symbol();\nexport const GET_REF = Symbol();\nexport const UPDATE = Symbol();\nexport const UPDATE_IF_NEED = Symbol();\nexport const UPDATE_NEXT_MAP = Symbol();\nexport const STATE = Symbol();\nexport const STATE_INITIALIZE = 0;\nexport const STATE_RENDERED = 1;\nexport const STATE_WILLDESTROY = 2;\nexport const STATE_DESTROIED = 4;\nexport const STATE_NAMES = [\n  'initialize', 'rendered', 'willdestroy', 'destroied'\n];\n\nexport const DOM_ON = Symbol();\nexport const DOM_PASS_LISTENERS = Symbol();\n\nexport const I18N_WATCH = Symbol();\nconst DOM_LISTENER_DEREGISTERS = Symbol();\nconst I18N_LISTENER_DEREGISTERS = Symbol();\n\nfunction copyContext(context) {\n  if (!context) return null;\n  return assignObject(createEmptyObject(), context);\n}\n\nexport class Component extends Messenger {\n  /**\n   * compiler will auto transform the `template` getter's return value from String to Render Function.\n   */\n  static get template() {\n    return null;\n  }\n\n  static get style() {\n    return null;\n  }\n\n  /**\n   * @param {Attributes} attrs Attributes passed from parent Component\n   */\n  constructor(attrs) {\n    if (!isObject(attrs) || !(VM_ATTRS in attrs)) {\n      throw new Error('First argument passed to Component constructor must be ViewModel with Messenger interface. See https://[todo]');\n    }\n    super(attrs[LISTENERS]);\n\n    this[PASSED_ATTRS] = attrs;\n\n    this[VM_ATTRS] = null;\n    this[VM_SETTER_FN_MAP] = null;\n\n    this[UPDATE_NEXT_MAP] = null;\n    this[CSTYLE_PID] = null;\n    this[CONTEXT] = attrs[CONTEXT];\n    this[CONTEXT_STATE] = 0;\n    this[ARG_COMPONENTS] = attrs[ARG_COMPONENTS];\n    this[STATE] = STATE_INITIALIZE;\n    /**\n     * ROOT_NODES means root children of this component,\n     *   include html-nodes and component-nodes.\n     * We use this infomation to remove DOM after this component is destroied.\n     * We do not maintain the whole parent-child view-tree but only root children,\n     * because when we remove the root children, whole view-tree will be\n     * removed, so we do not need waste memory to maintain whole view-tree.\n     */\n    this[ROOT_NODES] = [];\n    /**\n     * NON_ROOT_COMPONENT_NODES means nearest non-root component-nodes in the view-tree.\n     * Node in view-tree have two types, html-node and component-node.\n     *   html-node include html dom node and html text node,\n     *   component-node is an instance of a Component.\n     * For example, we have rendered a view-tree:\n     *             RootApp(Component)\n     *             /     |          \\\n     *         h1(Html)  h2(Html)  A(Component)\n     *            |                 |\n     *        C(Component)     D(Component)\n     *\n     * The nearest non-root component-nodes of RootApp include C,\n     *   but not include A(as it's root) or D(as it's not nearest).\n     *\n     * By the way, the ROOT_NODES of view-tree above is [h1, h2, A]\n     */\n    this[NON_ROOT_COMPONENT_NODES] = [];\n    /**\n     * REF_NODES contains all children with ref: attribute.\n     * REF_BELONGS contains all parent components which has this component as ref.\n     *\n     * 使用 ref: 标记的元素（Component 或 html node），会保存在 REF_NODES 中，\n     *   之后通过 GET_REF 函数可以获取到元素实例。\n     * 当标记的元素属于 <if> 或 <for> 等组件的 slot 时，这些元素可能被动态产生或销毁。\n     *   需要在元素产生或销毁时，相应地把它从它所属于的 REF_NODES 中添加或删除。\n     * 为了实现这个目的，对于 Component 元素，在将它添加到目标父组件的 REF_NODES 中的同时，\n     *   会将目标父组件反向记录到该元素的 REF_BELONGS 中，从而实现当该元素被销毁时，\n     *   可以将自己从它所属于的 REF_NODES 中删除；\n     * 对于 html node 元素，我们会将其目标父组件记录到该元素的渲染关联组件的 RELATED_DOM_REFS。\n     *   比如说，如果该 html 元素是 <if> 组件的 slot ，那它的渲染关联组件就是 <if> 内部的 Slot 组件，\n     *   当 <if> 的条件发生变化时，实际上会销毁这个 Slot 组件。由于前面提到的 html 元素\n     *   的 ref: 信息记录到了该 Slot 组件的 RELATED_DOM_REFS 里，因此就能反向地将\n     *   这个 html 元素从它所属于的 REF_NODES 中删除。\n     */\n    this[REF_NODES] = null;\n    this[REF_BELONGS] = null;\n    this[RELATED_DOM_REFS] = null;\n\n    /**\n     * If some child of this component is passed as argument(ie.\n     * use arg:pass attribute) like ng-tranclude in angular 1.x,\n     * the child may contain some messenger listeners not belong to\n     * this component but belong to outer parent.\n     *\n     * When destroy this component, we should also remove messenger listeners\n     *   belong to outer parent to prevent memory leak.\n     * To implement this goal, we maitain VM_RELATED_LISTENERS.\n     * When render view-tree, any messenger listeners belong to outer\n     * parent, will be also linked under VM_RELATED_LISTENERS, then\n     * when we destroy this component, the listeners can also be clear.\n     *\n     * For examle:\n     *\n     * <!-- outer parent: RootApp -->\n     * <div>\n     * <if expect=\"show\">\n     * <Tooltip>\n     * <argument arg:pass=\"default\">\n     * <p>hello, world. my name is ${name}</p>\n     * </argument>\n     * </Tooltip>\n     * </if>\n     * </div>\n     *\n     * when the `show` variable changed from true to false, the\n     * Tooltip component will be destroy. The messenger listener belong\n     * to the outer parent RootApp which watch `name` variable should\n     * also be removed.\n     */\n    this[VM_RELATED_LISTENERS] = null;\n\n    // saved listener deregisters, will be auto called when component is destroied\n    this[DOM_LISTENER_DEREGISTERS] = null;\n    this[I18N_LISTENER_DEREGISTERS] = null;\n\n    return wrapComponent(this);\n  }\n\n  /**\n   * Helper function to add i18n LOCALE_CHANGE listener.\n   * Return deregister function which will remove event listener.\n   * If you do dot call deregister function, it will be auto called when component is destroied.\n   * @param {Function} listener listener bind to LOCALE_CHANGE event.\n   * @param {Boolean} immediate call listener immediately, useful for component property initialize\n   * @returns {Function} deregister function to remove listener\n   */\n  [I18N_WATCH](listener, immediate) {\n    const deregs = getOrCreateArrayProperty(\n      this,\n      I18N_LISTENER_DEREGISTERS\n    );\n    const unwatcher = i18nService.watch(() => {\n      // bind component to listener's function context.\n      listener.call(this);\n    }, immediate);\n    const deregister = () => {\n      unwatcher();\n      arrayRemove(deregs, deregister);\n    };\n    deregs.push(deregister);\n    return deregister;\n  }\n\n  /**\n   * Helper function to add dom event listener.\n   * Return deregister function which will remove event listener.\n   * If you do dot call deregister function, it will be auto called when component is destroied.\n   * @param {HtmlElement} $el\n   * @param {String} eventName\n   * @param {Function} listener\n   * @param {Boolean|Object} capture\n   * @returns {Function} deregister function to remove listener\n   */\n  [DOM_ON]($el, eventName, listener, capture) {\n    const lisDeregister = registerEvent($el, eventName, $event => {\n      // bind component to listener's function context.\n      listener.call(this, $event);\n    }, capture);\n\n    const deregs = getOrCreateArrayProperty(this, DOM_LISTENER_DEREGISTERS);\n    const deregister = () => {\n      lisDeregister();\n      arrayRemove(deregs, deregister);\n    };\n    deregs.push(deregister);\n    return deregister;\n  }\n\n  /**\n   * Helper function to pass all listener to first dom element.\n   * @param {Array} ignoredEventNames event names not passed\n   */\n  [DOM_PASS_LISTENERS](ignoredEventNames) {\n    if (this[STATE] !== STATE_RENDERED) {\n      throw new Error('bindDOMListeners must be applied to component which is rendered.');\n    }\n    const lis = this[LISTENERS];\n    if (!lis || lis.length === 0) {\n      return;\n    }\n    const $el = this[GET_FIRST_DOM]();\n    if ($el.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n    lis.forEach((handlers, eventName) => {\n      if (ignoredEventNames && ignoredEventNames.indexOf(eventName) >= 0) {\n        return;\n      }\n      handlers.forEach(fn => {\n        this[DOM_ON]($el, eventName, fn.tag ? $evt => {\n          fn.tag.stop && $evt.stopPropagation();\n          fn.tag.prevent && $evt.preventDefault();\n          fn($evt);\n        } : fn);\n      });\n    });\n  }\n\n  [GET_TRANSITION_DOM]() {\n    const rns = this[ROOT_NODES];\n    if (rns.length === 0) assertFail();\n    const el = rns[0];\n    return isComponent(el) ? el[GET_TRANSITION_DOM]() : el;\n  }\n\n  [GET_FIRST_DOM]() {\n    const rns = this[ROOT_NODES];\n    if (rns.length === 0) assertFail();\n    const el = rns[0];\n    return isComponent(el) ? el[GET_FIRST_DOM]() : el;\n  }\n\n  [GET_LAST_DOM]() {\n    const rns = this[ROOT_NODES];\n    if (rns.length === 0) assertFail();\n    const el = rns[rns.length - 1];\n    return isComponent(el) ? el[GET_LAST_DOM]() : el;\n  }\n\n  [CLONE]() {\n    throw new Error('abstract method');\n  }\n\n  [RENDER]() {\n    const Clazz = this.constructor;\n    let renderFn = Clazz.template;\n    if (!renderFn && this[ARG_COMPONENTS]) {\n      renderFn = this[ARG_COMPONENTS][STR_DEFAULT];\n    }\n    if (!isFunction(renderFn)) {\n      assertFail(`render function of ${Clazz.name} not found. Forget static getter \"template\"?`);\n    }\n    StyleManager[CSTYLE_ADD](Clazz.style);\n    return renderFn(this);\n  }\n\n  /**\n   *\n   * @param {HTMLElement} $targetDOM\n   * @param {Boolean} replaceMode if false, use append mode\n   */\n  [RENDER_TO_DOM]($targetDOM, replaceMode = true) {\n    if (!isDOMNode($targetDOM)) assertFail();\n    if (this[STATE] !== STATE_INITIALIZE) {\n      assertFail();\n    }\n    const rr = assertRenderResults(this[RENDER]());\n    StyleManager[CSTYLE_ATTACH]();\n    if (replaceMode) {\n      replaceChild(getParent($targetDOM), rr, $targetDOM);\n    } else {\n      appendChild($targetDOM, rr);\n    }\n    this[HANDLE_AFTER_RENDER]();\n  }\n\n  [DESTROY](removeDOM = true) {\n    if (this[STATE] > STATE_WILLDESTROY) return;\n    this[STATE] = STATE_WILLDESTROY;\n    /*\n     * once component is being destroied,\n     *   we mark component and it's passed-attrs un-notifiable to ignore\n     *   possible messeges occurs in BEFORE_DESTROY lifecycle callback.\n     */\n    this[VM_ATTRS][VM_NOTIFIABLE] = false;\n    this[PASSED_ATTRS][VM_ATTRS][VM_NOTIFIABLE] = false;\n\n    // notify before destroy lifecycle\n    // 需要注意，必须先 NOTIFY 向外通知销毁消息，再执行 BEFORE_DESTROY 生命周期函数。\n    //   因为在 BEFORE_DESTROY 里会销毁外部消息回调函数里可能会用到的属性等资源。\n    this[NOTIFY](BEFORE_DESTROY_EVENT_NAME, this);\n    this[BEFORE_DESTROY]();\n    // destroy children(include child component and html nodes)\n    this[HANDLE_BEFORE_DESTROY](removeDOM);\n    // clear messenger listeners.\n    super[CLEAR]();\n    // remove component style\n    StyleManager[CSTYLE_DEL](this.constructor.style);\n    // destroy attrs passed to constructor\n    const attrs = this[PASSED_ATTRS];\n    attrs[VM_ATTRS][VM_DESTROY]();\n    // unlink all symbol property. may be unnecessary.\n    getOwnPropertySymbols(attrs, p => {\n      attrs[p] = null;\n    });\n\n    /*\n     * reset HOST object's all public properties to null\n     *   to remove HOST object from old property value's VM_PARENTS\n     *\n     * 将所有公共属性的属性值重置为 null，从而解除 ViewModel 之间的 VM_PARENTS 关联，回收资源和防止潜在 bug。\n     *   使用 getOwnPropertyNames 可以获取所有属性，但无法获取 setter 函数定义的属性。\n     *   因此，先从 VM_SETTER_FN_MAP 中取到所有使用过的属性，主动调用属性值的 REMOVE_PARENT；然后使用 getOwnPropertyNames 简单地重置 null。\n     */\n    const sfm = this[VM_SETTER_FN_MAP];\n    if (sfm) {\n      sfm.forEach((fn, prop) => {\n        if (fn === null) return;\n        const v = this[prop];\n        if (isObject(v) && (VM_ATTRS in v)) {\n          v[VM_ATTRS][VM_REMOVE_PARENT](\n            this[VM_ATTRS][VM_HOST],\n            prop\n          );\n        }\n      });\n      sfm.clear();\n      this[VM_SETTER_FN_MAP] = null;\n    }\n    getOwnPropertyNames(this, prop => {\n      if (isObject(this[prop])) {\n        this[prop] = null;\n      }\n    });\n    // destroy view model, it's import to pass false as argument\n    this[VM_ATTRS][VM_DESTROY](false);\n\n    // clear next tick update setImmediate\n    const unm = this[UPDATE_NEXT_MAP];\n    if (unm) {\n      unm.forEach(imm => {\n        clearImmediate(imm);\n      });\n      unm.clear();\n      this[UPDATE_NEXT_MAP] = null;\n    }\n\n    // destroy related refs:\n    destroyRelatedRefs(this);\n    // clear context.\n    destroyContext(this);\n    // clear all dom event listener and i18n watcher\n    releaseDeregisters(this, DOM_LISTENER_DEREGISTERS);\n    releaseDeregisters(this, I18N_LISTENER_DEREGISTERS);\n\n    // clear properties\n    this[STATE] = STATE_DESTROIED;\n    // unlink all symbol properties. maybe unnecessary.\n    this[VM_SETTER_FN_MAP] =\n      this[PASSED_ATTRS] =\n      this[NON_ROOT_COMPONENT_NODES] =\n      this[ROOT_NODES] =\n      this[REF_NODES] =\n      this[REF_BELONGS] =\n      this[ARG_COMPONENTS] = null;\n    // unlink VM_ATTRS, mark component destroied\n    // 这行代码必须放在最后，因为在 ../viewmodel/proxy.js 里面，\n    //   需要使用 VM_ATTRS 是否存在来判断组件是否已经销毁。\n    this[VM_ATTRS] = null;\n  }\n\n  [HANDLE_BEFORE_DESTROY](removeDOM) {\n    this[NON_ROOT_COMPONENT_NODES].forEach(component => {\n      // it's not necessary to remove dom when destroy non-root component,\n      // because those dom nodes will be auto removed when their parent dom is removed.\n      component[DESTROY](false);\n    });\n    this[NON_ROOT_COMPONENT_NODES].length = 0;\n\n    let $parent;\n    this[ROOT_NODES].forEach(node => {\n      if (isComponent(node)) {\n        node[DESTROY](removeDOM);\n      } else if (removeDOM) {\n        if (!$parent) {\n          $parent = getParent(node);\n        }\n        removeChild($parent, node);\n      }\n    });\n    this[ROOT_NODES].length = 0;\n  }\n\n  [HANDLE_AFTER_RENDER]() {\n    /*\n     * Set NOTIFIABLE=true to enable ViewModel notify.\n     * Don't forgot to add these code if you override HANDLE_AFTER_RENDER\n     */\n    this[PASSED_ATTRS][VM_ATTRS][VM_NOTIFIABLE] = true;\n    this[VM_ATTRS][VM_NOTIFIABLE] = true;\n\n    this[ROOT_NODES].forEach(n => {\n      if (isComponent(n)) n[HANDLE_AFTER_RENDER]();\n    });\n    this[NON_ROOT_COMPONENT_NODES].forEach(n => {\n      if (isComponent(n)) n[HANDLE_AFTER_RENDER]();\n    });\n    this[STATE] = STATE_RENDERED;\n    this[CONTEXT_STATE] = this[CONTEXT_STATE] > 0 ? -2 : -1; // has been rendered, can't modify context\n    this[AFTER_RENDER]();\n    this[NOTIFY](AFTER_RENDER_EVENT_NAME, this);\n  }\n\n  /**\n   *\n   * @param {Function|boolean} handler\n   * @param {boolean} nextTick\n   */\n  [UPDATE_IF_NEED](handler = null, nextTick = true) {\n    if (this[STATE] !== STATE_RENDERED) {\n      return;\n    }\n    if (handler === false) {\n      return this[UPDATE]();\n    }\n\n    if (!isFunction(handler)) {\n      handler = this[UPDATE];\n    }\n\n    if (!nextTick) {\n      handler.call(this);\n      return;\n    }\n\n    const ntMap = getOrCreateMapProperty(this, UPDATE_NEXT_MAP);\n    if (ntMap.has(handler)) {\n      // already in queue.\n      return;\n    }\n    ntMap.set(handler, setImmediate(() => {\n      ntMap.delete(handler);\n      handler.call(this);\n    }));\n  }\n\n  [UPDATE]() {\n    throw new Error('abstract method');\n  }\n\n  [GET_STATE_NAME]() {\n    return STATE_NAMES[this[STATE]];\n  }\n\n  [SET_CONTEXT](id, ctx, forceOverride = false) {\n    if (this[CONTEXT_STATE] < 0) {\n      throw new Error('Can\\'t setContext after component has been rendered. Try put setContext code into constructor.');\n    }\n    if (this[CONTEXT_STATE] === 0) {\n      // we copy context to make sure child component do not modify context passed from parent.\n      // we do not copy it by default until setContext function is called, because it unnecessary to waste memory if\n      // child component do not modify the context.\n      if (!this[CONTEXT]) {\n        this[CONTEXT] = createEmptyObject();\n      } else {\n        this[CONTEXT] = copyContext(this[CONTEXT]);\n      }\n      this[CONTEXT_STATE] = 1; // has been copied.\n    }\n    if (id in this[CONTEXT]) {\n      // override exist may case hidden bug hard to debug.\n      // so we force programmer to pass third argument to\n      //   tell us he/she know what he/she is doing.\n      if (!forceOverride) {\n        throw new Error(`Contenxt with id: ${id.toString()} is exist. Pass third argument forceOverride=true to override it.`);\n      }\n    }\n    this[CONTEXT][id] = ctx;\n  }\n\n  [GET_CONTEXT](id) {\n    return this[CONTEXT] ? this[CONTEXT][id] : null;\n  }\n\n  [SET_REF_NODE](ref, el, relatedComponent) {\n    const rns = getOrCreateMapProperty(this, REF_NODES);\n    let elOrArr = rns.get(ref);\n    if (!elOrArr) {\n      rns.set(ref, el);\n    } else if (isArray(elOrArr)) {\n      elOrArr.push(el);\n    } else {\n      elOrArr = [elOrArr, el];\n      rns.set(ref, elOrArr);\n    }\n    if (isComponent(el)) {\n      getOrCreateArrayProperty(el, REF_BELONGS).push([\n        this, ref\n      ]);\n      return;\n    }\n    if (this === relatedComponent) {\n      return;\n    }\n    getOrCreateArrayProperty(\n      relatedComponent, RELATED_DOM_REFS\n    ).push([this, ref, el]);\n  }\n\n  /**\n   * Get child node(or nodes) marked by 'ref:' attribute in template\n   * @param {String} ref\n   * @returns {Node|Array<Node>}\n   */\n  [GET_REF](ref) {\n    if (this[STATE] !== STATE_RENDERED) {\n      console.error(`Warning: call getChild before component '${this.constructor.name}' is rendered will get nothing, try put getChild into afterRender lifecycle hook.`);\n    }\n    return this[REF_NODES] ? this[REF_NODES].get(ref) : null;\n  }\n\n  /**\n   * lifecycle hook, called after rendered.\n   */\n  [AFTER_RENDER]() {\n    // lifecycle hook, default do nothing.\n  }\n\n  /**\n   * lifecycle hook, called before destroy.\n   */\n  [BEFORE_DESTROY]() {\n    // lifecycle hook, default do nothing.\n  }\n}\n\nfunction destroyContext(comp) {\n  const ctx = comp[CONTEXT];\n  if (!ctx) return;\n  if (comp[CONTEXT_STATE] === -2) {\n    // maybe unnecessary to reset properties\n    getOwnPropertyNames(ctx, propN => {\n      ctx[propN] = null;\n    });\n    getOwnPropertySymbols(ctx, propN => {\n      ctx[propN] = null;\n    });\n  }\n  comp[CONTEXT] = null;\n}\n\nfunction releaseDeregisters(component, nameOfDeregisters) {\n  if (component[nameOfDeregisters]) {\n    component[nameOfDeregisters].forEach(deregister => deregister());\n    component[nameOfDeregisters] = null;\n  }\n}\n\nexport function destroyRelatedRefs(comp) {\n  function _unref(refBelongs, el) {\n    if (!refBelongs) return;\n    refBelongs.forEach(info => {\n      const map = info[0][REF_NODES];\n      if (!map) return;\n      const rns = map.get(info[1]);\n      if (isArray(rns)) {\n        arrayRemove(rns, el || info[2]);\n      } else {\n        map.delete(info[1]);\n      }\n    });\n  }\n  _unref(comp[REF_BELONGS], comp);\n  _unref(comp[RELATED_DOM_REFS]);\n}\n\nexport function isComponent(c) {\n  return ROOT_NODES in c;\n}\n\nexport function assertRenderResults(renderResults) {\n  if (!isArray(renderResults) || renderResults.length === 0) {\n    throw new Error('Render results of component is empty');\n  }\n  return renderResults;\n}\n\nexport function operateRootHtmlDOM(fn, el, ...args) {\n  if (!isComponent(el)) return fn(el, ...args);\n  el[ROOT_NODES].forEach(ce => {\n    operateRootHtmlDOM(fn, ce, ...args);\n  });\n}\n","import {\n  assertFail\n} from '../util';\nimport {\n  wrapAttrs\n} from '../vm';\nimport {\n  RENDER_TO_DOM,\n  isComponent\n} from './component';\n\nexport function bootstrap(Component, dom, attrs) {\n  if (dom === document.body) {\n    throw new Error('bootstrap dom cannot be document.body');\n  }\n  /**\n   * as we must pass ViewModel-Object as first argument to Component constructor,\n   * we simple pass an empty attrs.\n   */\n  const bootAttrs = attrs || {};\n  const bootComponent = new Component(wrapAttrs(bootAttrs));\n  if (!isComponent(bootComponent)) assertFail();\n  bootComponent[RENDER_TO_DOM](dom);\n}\n","import {\n  createComment,\n  createElement,\n  createTextNode,\n  STR_EMPTY\n} from '../util';\nimport {\n  ROOT_NODES,\n  I18N_WATCH\n} from './component';\nimport {\n  i18n as i18nService,\n  I18N_GET_TEXT\n} from './i18n';\n\nexport function emptyRenderFn(component) {\n  const el = createComment(STR_EMPTY);\n  component[ROOT_NODES].push(el);\n  return [el];\n}\n\nexport function errorRenderFn(component) {\n  const el = createElement('span', {\n    style: 'color: red !important;'\n  });\n  el.textContent = 'template parsing failed! please check webpack log.';\n  component[ROOT_NODES].push(el);\n  return [el];\n}\n\nexport function textRenderFn(component, txtContent) {\n  const el = createTextNode(txtContent);\n  component[ROOT_NODES].push(el);\n  return el;\n}\n\nexport function i18nRenderFn(component, key) {\n  const el = createTextNode();\n  const fn = () => {\n    el.textContent = i18nService[I18N_GET_TEXT](key);\n  };\n  fn();\n  component[I18N_WATCH](fn);\n  component[ROOT_NODES].push(el);\n  return el;\n}\n","import {\n  getComputedStyle,\n  getCSPropertyValue\n} from '../util';\n\nexport const TS_TRANSITION_END = 'transitionend';\nexport const TS_ANIMATION_END = 'animationend';\nexport const TS_TRANSITION_DURATION = 'transition-duration';\nexport const TS_ANIMATION_DURATION = 'animation-duration';\nexport const TS_TRANSITION = 'transition';\nexport const TS_ZERO_S = '0s';\nexport const TS_ENTER = 'enter';\nexport const TS_LEAVE = 'leave';\nexport const TS_C_ENTER = '-enter';\nexport const TS_C_LEAVE = '-leave';\nexport const TS_C_ENTER_ACTIVE = '-enter-active';\nexport const TS_C_LEAVE_ACTIVE = '-leave-active';\nexport const TS_BEFORE_ENTER = 'before-enter';\nexport const TS_AFTER_ENTER = 'after-enter';\nexport const TS_BEFORE_LEAVE = 'before-leave';\nexport const TS_AFTER_LEAVE = 'after-leave';\nexport const TS_ENTER_CANCELLED = 'enter-cancelled';\nexport const TS_LEAVE_CANCELLED = 'leave-cancelled';\n\nexport const TS_STATE_ENTERING = 1;\nexport const TS_STATE_ENTERED = 2;\nexport const TS_STATE_LEAVING = 3;\nexport const TS_STATE_LEAVED = 4;\n\nexport function getDurationType(el) {\n  const cst = getComputedStyle(el);\n  if (getCSPropertyValue(cst, TS_TRANSITION_DURATION) !== TS_ZERO_S) {\n    return TS_TRANSITION_END;\n  } else if (getCSPropertyValue(cst, TS_ANIMATION_DURATION) !== TS_ZERO_S) {\n    return TS_ANIMATION_END;\n  }\n  return null;\n}\n\nfunction parseDuration(v) {\n  if (/ms$/.test(v)) {\n    return parseInt(v);\n  } else if (/s$/.test(v)) {\n    return parseFloat(v) * 1000;\n  } else {\n    return 0;\n  }\n}\n\nexport function getDuration(el) {\n  const cst = getComputedStyle(el);\n  let dur = getCSPropertyValue(cst, TS_TRANSITION_DURATION);\n  if (dur !== TS_ZERO_S) {\n    return [TS_TRANSITION_END, parseDuration(dur)];\n  }\n  dur = getCSPropertyValue(cst, TS_ANIMATION_DURATION);\n  if (dur !== TS_ZERO_S) {\n    return [TS_ANIMATION_END, parseDuration(dur)];\n  }\n  return [null, 0];\n}\n","export * from './bootstrap';\nexport * from './component';\nexport * from './i18n';\nexport * from './messenger';\nexport * from './render_fns';\nexport * from './style';\nexport * from './transition';\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component,\n  RENDER,\n  UPDATE,\n  GET_TRANSITION_DOM,\n  operateRootHtmlDOM,\n  UPDATE_IF_NEED,\n  BEFORE_DESTROY,\n  NOTIFY,\n  TS_STATE_ENTERED,\n  TS_STATE_LEAVED,\n  TS_STATE_LEAVING,\n  TS_STATE_ENTERING,\n  TS_ENTER,\n  TS_LEAVE,\n  TS_TRANSITION,\n  TS_LEAVE_CANCELLED,\n  TS_ENTER_CANCELLED,\n  TS_BEFORE_ENTER,\n  TS_BEFORE_LEAVE,\n  TS_TRANSITION_END,\n  TS_ANIMATION_END,\n  TS_AFTER_ENTER,\n  TS_AFTER_LEAVE,\n  TS_C_ENTER,\n  TS_C_LEAVE,\n  TS_C_ENTER_ACTIVE,\n  TS_C_LEAVE_ACTIVE,\n  getDurationType\n} from '../core';\nimport {\n  addClass,\n  removeClass,\n  addEvent,\n  removeEvent,\n  isObject,\n  setImmediate\n} from '../util';\nimport {\n  vmWatch\n} from '../vm';\n\nexport class ToggleClassComponent extends Component {\n  constructor(attrs) {\n    if (!attrs || !isObject(attrs.class)) {\n      throw new Error('<toggle-class> component require \"class\" attribute to be Object.');\n    }\n    const vm_4a82e3ceda = super(attrs);\n    const fn_4a82e3ceda_2 = () => {\n      vm_4a82e3ceda.class = attrs.class;\n    };\n    fn_4a82e3ceda_2();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('class', fn_4a82e3ceda_2);\n    const fn_4a82e3ceda_3 = () => {\n      vm_4a82e3ceda.trans = !!attrs.transition;\n    };\n    fn_4a82e3ceda_3();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('transition', fn_4a82e3ceda_3);\n    vm_4a82e3ceda._t = null;\n    vm_4a82e3ceda._i = null;\n    vmWatch(this, 'class.**', () => {\n      vm_4a82e3ceda[UPDATE_IF_NEED]();\n    });\n    return vm_4a82e3ceda;\n  }\n\n  [RENDER]() {\n    const rr = super[RENDER]();\n    this[UPDATE](true);\n    return rr;\n  }\n\n  [BEFORE_DESTROY]() {\n    this._t && this._t.clear();\n  }\n\n  [UPDATE](init) {\n    const el = this.trans ? this[GET_TRANSITION_DOM]() : this;\n    if (el.nodeType !== Node.ELEMENT_NODE) {\n      // ignore comment or text-node\n      return;\n    }\n    if (this.trans && !this._t) {\n      this._t = new Map();\n    }\n    const cs = this.class;\n    Object.keys(cs).forEach(k => {\n      const v = cs[k];\n      if (!this.trans) {\n        operateRootHtmlDOM(\n          v ? addClass : removeClass,\n          el, k\n        );\n        return;\n      }\n\n      if (init) {\n        this._t.set(k, [\n          v ? TS_STATE_ENTERED : TS_STATE_LEAVED, // state\n          null // saved onEnd callback\n        ]);\n        v ? addClass(el, k) : removeClass(el, k);\n        return;\n      }\n\n      const t = this._t.get(k);\n      if (!t) {\n        console.error('Unsupport <toogle-class> attribute. see https://todo');\n        return;\n      }\n      const s = t[0];\n      if ((v && s <= TS_STATE_ENTERED) || (!v && s >= TS_STATE_LEAVING)) {\n        return;\n      }\n\n      if (s === (v ? TS_STATE_LEAVING : TS_STATE_ENTERING)) {\n        // debugger;\n        removeClass(el, k + (v ? TS_C_LEAVE : TS_C_ENTER));\n        removeClass(el, k + (v ? TS_C_LEAVE_ACTIVE : TS_C_ENTER_ACTIVE));\n        removeEvent(el, TS_TRANSITION_END, t[1]);\n        removeEvent(el, TS_ANIMATION_END, t[1]);\n        t[1] = null;\n        this[NOTIFY](TS_TRANSITION, v ? TS_LEAVE_CANCELLED : TS_ENTER_CANCELLED, k, el);\n      }\n      const classOfStart = k + (v ? TS_C_ENTER : TS_C_LEAVE);\n      const classOfActive = k + (v ? TS_C_ENTER_ACTIVE : TS_C_LEAVE_ACTIVE);\n      addClass(el, classOfStart);\n      // force render by calling getComputedStyle\n      getDurationType(el);\n      addClass(el, classOfActive);\n      const tsEndName = getDurationType(el);\n      if (!tsEndName) {\n        removeClass(el, classOfStart);\n        removeClass(el, classOfActive);\n        t[0] = v ? TS_STATE_ENTERED : TS_STATE_LEAVED;\n        v ? addClass(el, k) : removeClass(el, k);\n        return;\n      }\n      const onEnd = () => {\n        removeEvent(el, TS_TRANSITION_END, onEnd);\n        removeEvent(el, TS_ANIMATION_END, onEnd);\n        removeClass(el, classOfStart);\n        removeClass(el, classOfActive);\n        t[1] = null;\n        t[0] = v ? TS_STATE_ENTERED : TS_STATE_LEAVED;\n        v ? addClass(el, k) : removeClass(el, k);\n        this[NOTIFY](TS_TRANSITION, v ? TS_AFTER_ENTER : TS_AFTER_LEAVE, k, el);\n      };\n      t[0] = v ? TS_STATE_ENTERING : TS_STATE_LEAVING;\n      t[1] = onEnd;\n      addEvent(el, tsEndName, onEnd);\n      this[NOTIFY](TS_TRANSITION, v ? TS_BEFORE_ENTER : TS_BEFORE_LEAVE, k, el);\n      setImmediate(() => {\n        this[NOTIFY](TS_TRANSITION, v ? TS_ENTER : TS_LEAVE, k, el);\n      });\n    });\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component,\n  RENDER,\n  ROOT_NODES,\n  ARG_COMPONENTS,\n  UPDATE_IF_NEED,\n  UPDATE,\n  DESTROY,\n  isComponent,\n  GET_FIRST_DOM,\n  CONTEXT,\n  HANDLE_AFTER_RENDER,\n  GET_LAST_DOM,\n  STATE,\n  STATE_RENDERED,\n  CSTYLE_PID,\n  addParentStyleId\n} from '../core';\nimport {\n  isArray,\n  Symbol,\n  STR_DEFAULT,\n  isObject,\n  assertFail,\n  STR_EMPTY,\n  STR_LENGTH,\n  isNumber,\n  isString,\n  createComment,\n  createFragment,\n  appendChild,\n  getParent,\n  insertBefore,\n  removeChild,\n  insertAfter\n} from '../util';\nimport {\n  wrapAttrs,\n  VM_DEBUG_NAME,\n  vmWatch,\n  VM_ATTRS,\n  isInnerObj\n} from '../vm';\n\nexport const FOR_LENGTH = Symbol();\nexport const FOR_KEYS = Symbol();\nexport const FOR_KEY_NAME = Symbol();\nexport const FOR_WAIT_UPDATE = Symbol();\nexport const FOR_UPDATE_ITEM = Symbol();\n\nconst KEY_INDEX = 'index';\nconst KEY_EACH = 'each';\nconst EMP_ARR = [];\n\nexport class ForEachComponent extends Component {\n  constructor(attrs, item, index, isLast) {\n    const vm_4a82e3ceda = super(attrs);\n    vm_4a82e3ceda.each = item;\n    vm_4a82e3ceda.index = index;\n    vm_4a82e3ceda.isFirst = index === 0;\n    vm_4a82e3ceda.isLast = isLast;\n    return vm_4a82e3ceda;\n  }\n\n  [RENDER]() {\n    const renderFn = this[ARG_COMPONENTS][STR_DEFAULT];\n    if (!renderFn) assertFail();\n    return renderFn(this);\n  }\n}\n\nfunction createEl(item, i, isLast, itemRenderFn, context, cstyPid) {\n  const el = new ForEachComponent(wrapAttrs({\n    [VM_DEBUG_NAME]: 'attrs_of_<for-each>',\n    [VM_ATTRS]: null,\n    [CONTEXT]: context,\n    [ARG_COMPONENTS]: {\n      [STR_DEFAULT]: itemRenderFn\n    }\n  }), item, i, isLast);\n  cstyPid && addParentStyleId(el, cstyPid);\n  return el;\n}\n\nfunction appendRenderEach(item, i, isLast, itemRenderFn, roots, context, cstyPid) {\n  const el = createEl(item, i, isLast, itemRenderFn, context, cstyPid);\n  roots.push(el);\n  return el[RENDER]();\n}\n\nfunction _assertVm(item, i) {\n  if (isObject(item) && !isInnerObj(item) && !(VM_ATTRS in item)) {\n    throw new Error(`loop item [${i}] of <for> component must be ViewModel.`);\n  }\n}\n\nfunction _prepareKey(item, i, keyMap, keyName) {\n  const key = keyName === KEY_EACH ? item : keyName(item);\n  if (keyMap.has(key)) {\n    console.error(`loop items [${i}] and [${keyMap.get(key)}] of <for> component both have key '${key}', dulplicated key may cause update error.`);\n  }\n  keyMap.set(key, i);\n  return key;\n}\n\nfunction renderItems(items, itemRenderFn, roots, keys, keyName, context, cstyPid) {\n  const result = [];\n  const tmpKeyMap = new Map();\n  items.forEach((item, i) => {\n    _assertVm(item, i);\n    if (keyName !== KEY_INDEX) {\n      keys.push(_prepareKey(item, i, tmpKeyMap, keyName));\n    }\n    result.push(...appendRenderEach(item, i, i === items.length - 1, itemRenderFn, roots, context, cstyPid));\n  });\n  return result;\n}\n\nfunction loopAppend($parent, el) {\n  el[ROOT_NODES].forEach(node => {\n    if (isComponent(node)) {\n      loopAppend($parent, node);\n    } else {\n      appendChild($parent, node);\n    }\n  });\n}\n\nfunction updateEl(el, i, items) {\n  if (el.isFirst !== (i === 0)) {\n    el.isFirst = i === 0;\n  }\n  if (el.isLast !== (i === items.length - 1)) {\n    el.isLast = (i === items.length - 1);\n  }\n  if (el.index !== i) {\n    el.index = i;\n  }\n  if (el.each !== items[i]) {\n    el.each = items[i];\n  }\n}\n\nfunction _parseIndexPath(p) {\n  return (isString(p) && p !== STR_LENGTH && /^\\d+$/.test(p)) ? Number(p) : p;\n}\n\nlet INC = 0;\nconst ID = Symbol();\n\nexport class ForComponent extends Component {\n  constructor(attrs) {\n    if (attrs.key && !/^(index|each(.[\\w\\d$_]+)*)$/.test(attrs.key)) {\n      throw new Error('Value of \"_key\" attribute of <for> component is invalidate. See https://[todo]');\n    }\n    const vm_4a82e3ceda = super(attrs);\n    const fn_4a82e3ceda_2 = () => {\n      vm_4a82e3ceda.loop = attrs.loop;\n    };\n    fn_4a82e3ceda_2();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('loop', fn_4a82e3ceda_2);\n    vm_4a82e3ceda[ID] = INC++;\n    const kn = attrs.key || KEY_INDEX;\n    vm_4a82e3ceda[FOR_KEY_NAME] = kn;\n    vm_4a82e3ceda[FOR_LENGTH] = 0;\n    vm_4a82e3ceda[FOR_KEYS] = null;\n    vm_4a82e3ceda[FOR_WAIT_UPDATE] = false;\n    if (kn !== KEY_INDEX && kn !== KEY_EACH) {\n      vm_4a82e3ceda[FOR_KEY_NAME] = new Function(KEY_EACH, `return ${ kn }`);\n      const propCount = kn.split('.').length + 1;\n      vmWatch(this, 'loop.*.' + kn.slice(5), propPath => {\n        if (propPath.length !== propCount || vm_4a82e3ceda[FOR_WAIT_UPDATE]) {\n          return;\n        }\n        const items = vm_4a82e3ceda.loop;\n        if (!isArray(items) || items.length === 0)\n          return;\n        const p = _parseIndexPath(propPath[1]);\n        if (!isNumber(p) || p >= items.length) {\n          return;\n        }\n        vm_4a82e3ceda[FOR_KEYS][p] = vm_4a82e3ceda[FOR_KEY_NAME](items[p]);\n      });\n    }\n    vmWatch(this, 'loop.*', propPath => {\n      if (vm_4a82e3ceda[STATE] !== STATE_RENDERED || propPath.length !== 2 || vm_4a82e3ceda[FOR_WAIT_UPDATE]) {\n        return;\n      }\n      const p = _parseIndexPath(propPath[1]);\n      if (p === STR_LENGTH) {\n        vm_4a82e3ceda[FOR_WAIT_UPDATE] = true;\n        vm_4a82e3ceda[UPDATE_IF_NEED]();\n      } else if (isNumber(p)) {\n        vm_4a82e3ceda[FOR_UPDATE_ITEM](p);\n      }\n    });\n    return vm_4a82e3ceda;\n  }\n\n  get loop() {\n    return this._l;\n  }\n\n  set loop(v) {\n    // console.log('set loop');\n    this._l = v;\n    this[FOR_WAIT_UPDATE] = true;\n    this[UPDATE_IF_NEED]();\n  }\n\n  [RENDER]() {\n    const roots = this[ROOT_NODES];\n    const itemRenderFn = this[ARG_COMPONENTS] ? this[ARG_COMPONENTS][STR_DEFAULT] : null;\n    if (!itemRenderFn) {\n      roots.push(createComment(STR_EMPTY));\n      return roots;\n    }\n    const items = this.loop;\n    const keyName = this[FOR_KEY_NAME];\n    if (keyName !== KEY_INDEX) this[FOR_KEYS] = [];\n    if (!isArray(items) || items.length === 0) {\n      roots.push(createComment(STR_EMPTY));\n      return roots;\n    }\n    this[FOR_LENGTH] = items.length;\n    return renderItems(\n      items,\n      itemRenderFn,\n      roots,\n      this[FOR_KEYS],\n      keyName,\n      this[CONTEXT],\n      this[CSTYLE_PID]\n    );\n  }\n\n  [FOR_UPDATE_ITEM](index) {\n    const items = this.loop;\n    const roots = this[ROOT_NODES];\n    if (!isArray(items) || index >= roots.length) return;\n    const keys = this[FOR_KEYS];\n    const item = items[index];\n    const oldEl = roots[index];\n    if (oldEl.each === item) {\n      return;\n    }\n    const itemRenderFn = this[ARG_COMPONENTS] ? this[ARG_COMPONENTS][STR_DEFAULT] : null;\n    if (!itemRenderFn) return;\n    // console.log('update item:', index);\n    const keyName = this[FOR_KEY_NAME];\n    if (keyName !== KEY_INDEX) {\n      const newKey = keyName === KEY_EACH ? item : keyName(item);\n      const oldKey = keys[index];\n      if (newKey !== oldKey) {\n        const $fd = oldEl[GET_FIRST_DOM]();\n        const newEl = createEl(\n          item, index, oldEl.isLast,\n          itemRenderFn, this[CONTEXT], this[CSTYLE_PID]\n        );\n        const rr = newEl[RENDER]();\n        insertBefore(getParent($fd), rr, $fd);\n        oldEl[DESTROY]();\n        roots[index] = newEl;\n        keys[index] = newKey;\n        newEl[HANDLE_AFTER_RENDER]();\n        // console.log('update item render:', index);\n      } else {\n        oldEl.each = item;\n      }\n    } else {\n      oldEl.each = item;\n    }\n  }\n\n  [UPDATE]() {\n    this[FOR_WAIT_UPDATE] = false;\n    // console.log('for update');\n    const itemRenderFn = this[ARG_COMPONENTS] ? this[ARG_COMPONENTS][STR_DEFAULT] : null;\n    if (!itemRenderFn) return;\n\n    const newItems = isArray(this.loop) ? this.loop : EMP_ARR;\n    const roots = this[ROOT_NODES];\n    const nl = newItems.length;\n    const ol = this[FOR_LENGTH];\n    // nothing changed, return directly.\n    if (nl === 0 && ol === 0) return;\n\n    const keyName = this[FOR_KEY_NAME];\n    // if new length equal 0, clear & render comment.\n    if (nl === 0 && ol > 0) {\n      const fd = roots[0][GET_FIRST_DOM]();\n      const $cmt = createComment(STR_EMPTY);\n      insertBefore(getParent(fd), $cmt, fd);\n      for (let i = 0; i < ol; i++) {\n        roots[i][DESTROY]();\n      }\n      roots.length = 1;\n      roots[0] = $cmt;\n      if (keyName !== KEY_INDEX) {\n        this[FOR_KEYS].length = 0;\n      }\n      this[FOR_LENGTH] = 0;\n      return;\n    }\n\n    this[FOR_LENGTH] = nl;\n    const ctx = this[CONTEXT];\n    const cstyPid = this[CSTYLE_PID];\n    const firstEl = roots[0]; // if ol === 0, firstEl is comment, else is component\n    const $parent = getParent(ol === 0 ? firstEl : firstEl[GET_FIRST_DOM]());\n\n    if (keyName === KEY_INDEX) {\n      let $f = null;\n      if (ol === 0) roots.length = 0;\n\n      for (let i = 0; i < nl; i++) {\n        if (i < ol) {\n          updateEl(roots[i], i, newItems);\n        } else {\n          if (!$f) $f = createFragment();\n          appendChild($f, ...appendRenderEach(newItems[i], i, i === nl - 1, itemRenderFn, roots, ctx, cstyPid));\n        }\n      }\n      if ($f) {\n        const $le = ol === 0 ? firstEl : roots[ol - 1][GET_LAST_DOM]();\n        insertAfter($parent, $f, $le);\n        for (let i = ol; i < nl; i++) {\n          roots[i][HANDLE_AFTER_RENDER]();\n        }\n      }\n      if (ol === 0) {\n        removeChild($parent, firstEl);\n      }\n      if (nl >= ol) return;\n      for (let i = nl; i < ol; i++) {\n        roots[i][DESTROY]();\n      }\n      roots.splice(nl);\n\n      return;\n    }\n\n    const oldKeys = this[FOR_KEYS];\n    if (ol === 0) {\n      roots.length = 0;\n      const rs = renderItems(\n        newItems, itemRenderFn, roots,\n        oldKeys, keyName, this[CONTEXT], this[CSTYLE_PID]\n      );\n      insertAfter($parent, createFragment(rs), firstEl);\n      removeChild($parent, firstEl);\n      roots.forEach(el => el[HANDLE_AFTER_RENDER]());\n      return;\n    }\n\n    const oldKeyMap = new Map();\n    oldKeys.forEach((k, i) => {\n      oldKeyMap.set(k, i);\n    });\n    const newKeys = [];\n    const newKeyMap = new Map();\n    newItems.forEach((item, i) => {\n      _assertVm(item, i);\n      newKeys.push(_prepareKey(item, i, newKeyMap, keyName));\n    });\n\n    let oi = 0;\n    let ni = 0;\n    let $lastS = null;\n    const newRoots = [];\n    const oldTags = new Uint8Array(ol);\n    while (oi < ol || ni < nl) {\n      while (oi < ol) {\n        if (oldTags[oi] !== 0) {\n          oi++;\n        } else if (newKeyMap.has(oldKeys[oi]) && newKeyMap.get(oldKeys[oi]) >= ni) {\n          if (oi === ol - 1) {\n            $lastS = roots[oi][GET_LAST_DOM]().nextSibling;\n          }\n          break;\n        } else {\n          if (oi === ol - 1) {\n            $lastS = roots[oi][GET_LAST_DOM]().nextSibling;\n          }\n          roots[oi][DESTROY]();\n          oi++;\n        }\n      }\n      if (oi >= ol) {\n        let $f = null;\n        const cei = newRoots.length;\n        for (; ni < nl; ni++) {\n          const el = createEl(newItems[ni], ni, ni === nl - 1, itemRenderFn, ctx, cstyPid);\n          if (!$f) $f = createFragment();\n          appendChild($f, ...el[RENDER]());\n          newRoots.push(el);\n        }\n        if ($f) {\n          if ($lastS) {\n            insertBefore($parent, $f, $lastS);\n          } else {\n            appendChild($parent, $f);\n          }\n          for (let i = cei; i < newRoots.length; i++) {\n            newRoots[i][HANDLE_AFTER_RENDER]();\n          }\n        }\n        break;\n      }\n      const oldKey = oldKeys[oi];\n      let $f = null;\n      let $nes = null;\n      while (ni < nl) {\n        const newKey = newKeys[ni];\n        if (newKey === oldKey) break;\n\n        let reuseEl = null;\n        if (oldKeyMap.has(newKey)) {\n          const oldIdx = oldKeyMap.get(newKey);\n          if (oldIdx > oi && oldTags[oldIdx] === 0) {\n            reuseEl = roots[oldIdx];\n            oldTags[oldIdx] = 1;\n          }\n        }\n        if (!$f) $f = createFragment();\n        if (!reuseEl) {\n          reuseEl = createEl(newItems[ni], ni, ni === nl - 1, itemRenderFn, ctx, cstyPid);\n          appendChild($f, ...reuseEl[RENDER]());\n          if (!$nes) $nes = [];\n          $nes.push(reuseEl);\n        } else {\n          loopAppend($f, reuseEl);\n          updateEl(reuseEl, ni, newItems);\n        }\n        newRoots.push(reuseEl);\n        ni++;\n      }\n      if (ni >= nl) {\n        assertFail('unimpossible?!');\n      }\n      const el = roots[oi];\n      $f && insertBefore($parent, $f, el[GET_FIRST_DOM]());\n      $nes && $nes.forEach(el => el[HANDLE_AFTER_RENDER]());\n      updateEl(el, ni, newItems);\n      newRoots.push(el);\n      oi++;\n      ni++;\n    }\n\n    this[ROOT_NODES] = newRoots;\n    this[FOR_KEYS] = newKeys;\n  }\n}\n","import {\n  wrapViewModel,\n  vmWatch\n} from '../vm';\nimport {\n  ToggleClassComponent\n} from './class';\n\nexport const STR_JG_HIDE = 'jg-hide';\n\nexport class HideComponent extends ToggleClassComponent {\n  constructor(attrs) {\n    attrs.class = wrapViewModel({\n      [STR_JG_HIDE]: !!attrs.test\n    });\n    vmWatch(attrs, 'test', () => {\n      if (attrs.class[STR_JG_HIDE] !== attrs.test) {\n        attrs.class[STR_JG_HIDE] = attrs.test;\n      }\n    });\n    // eslint-disable-next-line constructor-super\n    return super(attrs);\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component,\n  RENDER,\n  ARG_COMPONENTS,\n  UPDATE_IF_NEED,\n  UPDATE,\n  ROOT_NODES\n} from '../core';\nimport {\n  createElementWithoutAttrs,\n  getParent,\n  removeChild,\n  createComment,\n  insertBefore,\n  STR_EMPTY\n} from '../util';\n\nfunction renderHtml(content) {\n  const $d = createElementWithoutAttrs('div');\n  $d.innerHTML = content || '';\n  let cn = $d.childNodes;\n  if (cn.length === 0) {\n    cn = [createComment(STR_EMPTY)];\n  } else {\n    cn = [].slice.call(cn); // convert NodeList to Array.\n  }\n  return cn;\n}\n\nexport class BindHtmlComponent extends Component {\n  constructor(attrs) {\n    if (attrs[ARG_COMPONENTS])\n      throw new Error('<bind-html/> don\\'t accept any child.');\n    if (!('content' in attrs))\n      throw new Error('<bind-html/> require \"content\" attribute');\n    const vm_4a82e3ceda = super(attrs);\n    const fn_4a82e3ceda_3 = () => {\n      vm_4a82e3ceda.c = attrs.content;\n    };\n    fn_4a82e3ceda_3();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('content', fn_4a82e3ceda_3);\n    return vm_4a82e3ceda;\n  }\n\n  get c() {\n    return this._c;\n  }\n\n  set c(v) {\n    if (this._c === v) return;\n    this._c = v;\n    this[UPDATE_IF_NEED]();\n  }\n\n  [RENDER]() {\n    return (this[ROOT_NODES] = renderHtml(this._c));\n  }\n\n  [UPDATE]() {\n    const roots = this[ROOT_NODES];\n    const oldFirstEl = roots[0];\n    const $p = getParent(oldFirstEl);\n    const newEls = renderHtml(this._c);\n    insertBefore($p, newEls, oldFirstEl);\n    roots.forEach(oldEl => removeChild($p, oldEl));\n    this[ROOT_NODES] = newEls;\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component,\n  RENDER,\n  DESTROY,\n  ARG_COMPONENTS,\n  UPDATE_IF_NEED,\n  UPDATE,\n  ROOT_NODES,\n  HANDLE_AFTER_RENDER,\n  GET_FIRST_DOM,\n  CONTEXT,\n  isComponent,\n  GET_TRANSITION_DOM,\n  BEFORE_DESTROY,\n  NOTIFY,\n  TS_STATE_ENTERED,\n  TS_STATE_LEAVED,\n  TS_STATE_LEAVING,\n  TS_STATE_ENTERING,\n  TS_ENTER,\n  TS_LEAVE,\n  TS_TRANSITION,\n  TS_LEAVE_CANCELLED,\n  TS_ENTER_CANCELLED,\n  TS_BEFORE_ENTER,\n  TS_BEFORE_LEAVE,\n  TS_TRANSITION_END,\n  TS_ANIMATION_END,\n  TS_AFTER_ENTER,\n  TS_AFTER_LEAVE,\n  TS_C_ENTER,\n  TS_C_LEAVE,\n  TS_C_ENTER_ACTIVE,\n  TS_C_LEAVE_ACTIVE,\n  getDurationType,\n  addParentStyleId,\n  CSTYLE_PID\n} from '../core';\nimport {\n  createComment,\n  getParent,\n  removeChild,\n  insertBefore,\n  removeClass,\n  removeEvent,\n  addClass,\n  addEvent,\n  STR_DEFAULT,\n  STR_EMPTY,\n  Symbol,\n  setImmediate\n} from '../util';\nimport {\n  wrapAttrs,\n  VM_DEBUG_NAME,\n  VM_ATTRS\n} from '../vm';\n\nconst IF_STR_ELSE = 'else';\nconst T_MAP = Symbol();\nconst P_VAL = Symbol();\nconst OE_H = Symbol();\n\nconst C_BV = Symbol();\nconst C_VAL = Symbol();\nconst ON_TS_END = Symbol();\n\nfunction createEl(renderFn, context, parentStyleIds) {\n  const el = new Component(wrapAttrs({\n    [VM_DEBUG_NAME]: 'attrs_of_<if>',\n    [VM_ATTRS]: null,\n    [CONTEXT]: context,\n    [ARG_COMPONENTS]: {\n      [STR_DEFAULT]: renderFn\n    }\n  }));\n  parentStyleIds && addParentStyleId(el, parentStyleIds);\n  return el;\n}\n\nfunction renderSwitch(component) {\n  const value = component[C_VAL];\n  const acs = component[ARG_COMPONENTS];\n  if (component.ts && acs) {\n    const t = new Map();\n    for (const k in acs) {\n      t.set(k, [\n        k === value ? TS_STATE_ENTERED : TS_STATE_LEAVED,\n        null // element\n      ]);\n    }\n    component[T_MAP] = t;\n    component[P_VAL] = value;\n    component[OE_H] = component[ON_TS_END].bind(component);\n  }\n  const renderFn = acs ? acs[value] : null;\n  const roots = component[ROOT_NODES];\n  if (!renderFn) {\n    roots.push(createComment(STR_EMPTY));\n    return roots;\n  }\n  const el = createEl(renderFn, component[CONTEXT], component[CSTYLE_PID]);\n  roots.push(el);\n  return el[RENDER]();\n}\n\nfunction updateSwitch(component) {\n  if (!isComponent(component[ROOT_NODES][0]) && (\n    !component[ARG_COMPONENTS] || !component[ARG_COMPONENTS][component[C_VAL]]\n  )) {\n    return;\n  }\n\n  if (component[T_MAP]) {\n    return updateSwitchWithTransition(component);\n  }\n\n  doUpdate(component);\n}\n\nfunction doUpdate(component) {\n  const roots = component[ROOT_NODES];\n  const el = roots[0];\n  const isC = isComponent(el);\n  const fd = isC ? el[GET_FIRST_DOM]() : el;\n  const pa = getParent(isC ? fd : el);\n  const renderFn = component[ARG_COMPONENTS] ? component[ARG_COMPONENTS][component[C_VAL]] : null;\n  const ne = renderFn ? createEl(renderFn, component[CONTEXT], component[CSTYLE_PID]) : null;\n  roots[0] = ne || createComment(STR_EMPTY);\n  insertBefore(\n    pa,\n    ne ? ne[RENDER]() : roots[0],\n    fd\n  );\n  if (isC) {\n    el[DESTROY]();\n  } else {\n    removeChild(pa, fd);\n  }\n  ne && renderFn && ne[HANDLE_AFTER_RENDER]();\n  component[NOTIFY]('branch-switched', component[C_BV]);\n}\n\nfunction cancelTs(t, tn, e, component) {\n  const el = t[1];\n  if (el.nodeType !== Node.ELEMENT_NODE) {\n    return;\n  }\n  const onEnd = component[OE_H];\n  removeClass(el, tn + (e ? TS_C_ENTER : TS_C_LEAVE));\n  removeClass(el, tn + (e ? TS_C_ENTER_ACTIVE : TS_C_LEAVE_ACTIVE));\n  removeEvent(el, TS_TRANSITION_END, onEnd);\n  removeEvent(el, TS_ANIMATION_END, onEnd);\n  component[NOTIFY](TS_TRANSITION, e ? TS_ENTER_CANCELLED : TS_LEAVE_CANCELLED, el);\n}\n\nfunction startTs(t, tn, e, component) {\n  const el = t[1];\n  const onEnd = component[OE_H];\n  if (el.nodeType !== Node.ELEMENT_NODE) {\n    onEnd();\n    return;\n  }\n  const classOfStart = tn + (e ? TS_C_ENTER : TS_C_LEAVE);\n  const classOfActive = tn + (e ? TS_C_ENTER_ACTIVE : TS_C_LEAVE_ACTIVE);\n\n  addClass(el, classOfStart);\n  // force render by calling getComputedStyle\n  getDurationType(el);\n  addClass(el, classOfActive);\n  const tsEndName = getDurationType(el);\n  if (!tsEndName) {\n    onEnd();\n    return;\n  }\n  t[0] = e ? TS_STATE_ENTERING : TS_STATE_LEAVING;\n  addEvent(el, tsEndName, onEnd);\n  component[NOTIFY](TS_TRANSITION, e ? TS_BEFORE_ENTER : TS_BEFORE_LEAVE, el);\n  setImmediate(() => {\n    component[NOTIFY](TS_TRANSITION, e ? TS_ENTER : TS_LEAVE, el);\n  });\n}\nfunction updateSwitchWithTransition(component) {\n  const value = component[C_VAL];\n  const pv = component[P_VAL];\n  const tn = component.ts;\n  let pt = component[T_MAP].get(pv);\n  if (!pt) {\n    pt = [\n      pv === IF_STR_ELSE ? TS_STATE_LEAVED : TS_STATE_ENTERED,\n      null // element\n    ];\n    component[T_MAP].set(pv, pt);\n  }\n  // debugger;\n  if (pt[0] === TS_STATE_ENTERING) {\n    if (value === pv) return;\n    cancelTs(pt, tn, true, component);\n    startTs(pt, tn, false, component);\n  } else if (pt[0] === TS_STATE_LEAVING) {\n    if (value !== pv) return;\n    cancelTs(pt, tn, false, component);\n    startTs(pt, tn, true, component);\n  } else if (pt[0] === TS_STATE_ENTERED) {\n    pt[1] = component[GET_TRANSITION_DOM]();\n    startTs(pt, tn, false, component);\n  } else if (pt[0] === TS_STATE_LEAVED) {\n    pt[1] = component[GET_TRANSITION_DOM]();\n    startTs(pt, tn, true, component);\n  }\n}\n\nfunction updateSwitchOnTransitionEnd(component) {\n  // console.log('on end')\n  const value = component[C_VAL];\n  const pv = component[P_VAL];\n  const tn = component.ts;\n  const pt = component[T_MAP].get(pv);\n  const e = pt[0] === TS_STATE_ENTERING;\n  const el = pt[1];\n\n  if (el.nodeType === Node.ELEMENT_NODE) {\n    removeEvent(el, TS_TRANSITION_END, component[OE_H]);\n    removeEvent(el, TS_ANIMATION_END, component[OE_H]);\n    removeClass(el, tn + (e ? TS_C_ENTER : TS_C_LEAVE));\n    removeClass(el, tn + (e ? TS_C_ENTER_ACTIVE : TS_C_LEAVE_ACTIVE));\n    component[NOTIFY](TS_TRANSITION, e ? TS_AFTER_ENTER : TS_AFTER_LEAVE);\n  }\n\n  pt[0] = e ? TS_STATE_ENTERED : TS_STATE_LEAVED;\n\n  if (e) return;\n\n  doUpdate(component);\n  component[P_VAL] = value;\n  const ct = component[T_MAP].get(value);\n  if (!ct) {\n    return;\n  }\n  const fd = component[GET_TRANSITION_DOM]();\n  if (fd.nodeType !== Node.ELEMENT_NODE) {\n    ct[0] = TS_STATE_ENTERED;\n    return;\n  }\n\n  ct[1] = fd;\n  startTs(ct, tn, true, component);\n}\n\nfunction destroySwitch(component) {\n  const tMap = component[T_MAP];\n  if (tMap) {\n    tMap.forEach((ts, v) => {\n      if (ts[1]) {\n        removeEvent(ts[1], TS_TRANSITION_END, component[OE_H]);\n        removeEvent(ts[1], TS_ANIMATION_END, component[OE_H]);\n      }\n      ts.length = 0;\n    });\n    tMap.clear();\n  }\n}\n\nexport class IfComponent extends Component {\n  constructor(attrs) {\n    const vm_4a82e3ceda = super(attrs);\n    vm_4a82e3ceda[C_VAL] = STR_DEFAULT;\n    vm_4a82e3ceda[OE_H] = null;\n    vm_4a82e3ceda[T_MAP] = null;\n    vm_4a82e3ceda[P_VAL] = null;\n    const fn_4a82e3ceda_5 = () => {\n      vm_4a82e3ceda.expect = attrs.expect;\n    };\n    fn_4a82e3ceda_5();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('expect', fn_4a82e3ceda_5);\n    const fn_4a82e3ceda_6 = () => {\n      vm_4a82e3ceda.ts = attrs.transition;\n    };\n    fn_4a82e3ceda_6();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('transition', fn_4a82e3ceda_6);\n    return vm_4a82e3ceda;\n  }\n\n  get expect() {\n    return this[C_VAL] === STR_DEFAULT;\n  }\n\n  set expect(v) {\n    v = v ? STR_DEFAULT : IF_STR_ELSE;\n    if (this[C_VAL] === v) return;\n    this[C_VAL] = v;\n    this[UPDATE_IF_NEED]();\n  }\n\n  get [C_BV]() {\n    return this.expect;\n  }\n\n  [ON_TS_END]() {\n    updateSwitchOnTransitionEnd(this);\n  }\n\n  [RENDER]() {\n    return renderSwitch(this);\n  }\n\n  [UPDATE]() {\n    updateSwitch(this);\n  }\n\n  [BEFORE_DESTROY]() {\n    destroySwitch(this);\n  }\n}\n\nexport class SwitchComponent extends Component {\n  constructor(attrs) {\n    const vm_4a82e3ceda = super(attrs);\n    vm_4a82e3ceda[OE_H] = null;\n    vm_4a82e3ceda[T_MAP] = null;\n    vm_4a82e3ceda[P_VAL] = null;\n    const fn_4a82e3ceda_4 = () => {\n      vm_4a82e3ceda.test = attrs.test;\n    };\n    fn_4a82e3ceda_4();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('test', fn_4a82e3ceda_4);\n    const fn_4a82e3ceda_5 = () => {\n      vm_4a82e3ceda.ts = attrs.transition;\n    };\n    fn_4a82e3ceda_5();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('transition', fn_4a82e3ceda_5);\n    return vm_4a82e3ceda;\n  }\n\n  get test() {\n    return this[C_VAL];\n  }\n\n  set test(v) {\n    const acs = this[ARG_COMPONENTS];\n    if (!acs || !(v in acs)) {\n      v = STR_DEFAULT;\n    }\n    if (this[C_VAL] === v) return;\n    this[C_VAL] = v;\n    this[UPDATE_IF_NEED]();\n  }\n\n  get [C_BV]() {\n    return this.test;\n  }\n\n  [ON_TS_END]() {\n    updateSwitchOnTransitionEnd(this);\n  }\n\n  [RENDER]() {\n    return renderSwitch(this);\n  }\n\n  [UPDATE]() {\n    updateSwitch(this);\n  }\n\n  [BEFORE_DESTROY]() {\n    destroySwitch(this);\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component\n} from '../core';\nimport {\n  VM_ON,\n  VM_ATTRS\n} from '../vm';\n\nexport class ParameterComponent extends Component {\n  constructor(attrs, params) {\n    const vm_4a82e3ceda = super(attrs);\n    params.forEach(p => {\n      vm_4a82e3ceda[p] = attrs[p];\n      attrs[VM_ATTRS][VM_ON](p, () => {\n        vm_4a82e3ceda[p] = attrs[p];\n      });\n    });\n    return vm_4a82e3ceda;\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\nimport {\n  Component,\n  RENDER\n} from '../core';\nimport {\n  createComment\n} from '../util';\n\n/**\n * This component is only for development purpose\n */\nexport class LogComponent extends Component {\n  constructor(attrs) {\n    const vm_4a82e3ceda = super(attrs);\n    const fn_4a82e3ceda_1 = () => {\n      vm_4a82e3ceda.msg = attrs.msg;\n    };\n    fn_4a82e3ceda_1();\n    attrs[VM_ATTRS_4a82e3ceda][VM_ON_4a82e3ceda]('msg', fn_4a82e3ceda_1);\n    return vm_4a82e3ceda;\n  }\n\n  set msg(v) {\n    console.log(v);\n    this._msg = v;\n  }\n\n  get msg() {\n    return this._msg;\n  }\n\n  [RENDER]() {\n    return [createComment('log placeholder')];\n  }\n}\n","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from '../vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from '../vm/proxy';\n\n\nimport {\n  Component,\n  RENDER,\n  UPDATE,\n  BEFORE_DESTROY,\n  UPDATE_IF_NEED,\n  HANDLE_BEFORE_DESTROY,\n  GET_LAST_DOM,\n  i18n as i18nService,\n  I18N_GET_RENDER,\n  I18N_WATCH\n} from '../core';\nimport {\n  getParent,\n  insertBefore,\n  appendChild\n} from '../util';\nimport {\n  vmRelatedClear,\n  VM_RELATED_LISTENERS\n} from '../vm';\n\nconst RENDER_KEY = Symbol('render_key');\nconst RENDER_VMS = Symbol('render_vms');\nconst ON_LOCALE_CHANGE = Symbol('fn_on_locale_change');\n\nexport class I18nComponent extends Component {\n  constructor(attrs, renderKey, renderVms) {\n    const vm_4a82e3ceda = super(attrs);\n    vm_4a82e3ceda[RENDER_KEY] = renderKey;\n    vm_4a82e3ceda[RENDER_VMS] = renderVms;\n    vm_4a82e3ceda[I18N_WATCH](vm_4a82e3ceda[ON_LOCALE_CHANGE]);\n    return vm_4a82e3ceda;\n  }\n\n  [RENDER]() {\n    const renderFn = i18nService[I18N_GET_RENDER](this[RENDER_KEY]);\n    return renderFn(this, ...this[RENDER_VMS]);\n  }\n\n  [ON_LOCALE_CHANGE]() {\n    this[UPDATE_IF_NEED]();\n  }\n\n  [UPDATE]() {\n    vmRelatedClear(this[VM_RELATED_LISTENERS]);\n\n    let $el = this[GET_LAST_DOM]();\n    const $parentEl = getParent($el);\n    $el = $el.nextSibling;\n\n    /*\n     * 当前实现下，HANDLE_BEFORE_DESTROY 正好可以销毁子组件/子元素。\n     */\n    this[HANDLE_BEFORE_DESTROY](true);\n    /*\n     * 将新的元素替换到原来的旧的元素的位置。\n     */\n    const els = this[RENDER]();\n    if ($el) {\n      insertBefore($parentEl, els, $el);\n    } else {\n      appendChild($parentEl, els);\n    }\n  }\n\n  [BEFORE_DESTROY]() {\n    this[RENDER_VMS] = null; // unlink vms, maybe not necessary\n  }\n}\n","export * from './class';\nexport * from './for';\nexport * from './hide';\nexport * from './html';\nexport * from './if';\nexport * from './parameter';\nexport * from './log';\nexport * from './i18n';\n","export * from './components';\nexport * from './core';\nexport * from './util';\nexport * from './vm';\n","import {\n  VM_ATTRS as VM_ATTRS_6fc8293f, VM_ON as VM_ON_6fc8293f, VM_OFF as VM_OFF_6fc8293f, VM_NOTIFY as VM_NOTIFY_6fc8293f, VM_DEBUG_NAME as VM_DEBUG_NAME_6fc8293f, RelatedListenersStore as RelatedListenersStore_6fc8293f, wrapViewModel as wrapViewModel_6fc8293f, wrapAttrs as wrapAttrs_6fc8293f, ON as ON_6fc8293f, OFF as OFF_6fc8293f, LISTENERS as LISTENERS_6fc8293f, i18nService as i18nService_6fc8293f, LOCALE_CHANGE as LOCALE_CHANGE_6fc8293f, GET_TEXT as GET_TEXT_6fc8293f, GET_ATTR as GET_ATTR_6fc8293f, CSTYLE_PID as CSTYLE_PID_6fc8293f, addParentStyleId as addParentStyleId_6fc8293f, assertRenderResults as assertRenderResults_6fc8293f, SET_REF_NODE as SET_REF_NODE_6fc8293f, CONTEXT as CONTEXT_6fc8293f, NON_ROOT_COMPONENT_NODES as NON_ROOT_COMPONENT_NODES_6fc8293f, ROOT_NODES as ROOT_NODES_6fc8293f, ARG_COMPONENTS as ARG_COMPONENTS_6fc8293f, RENDER as RENDER_6fc8293f, emptyRenderFn as emptyRenderFn_6fc8293f, errorRenderFn as errorRenderFn_6fc8293f, textRenderFn as textRenderFn_6fc8293f, i18nRenderFn as i18nRenderFn_6fc8293f, STR_EMPTY as STR_EMPTY_6fc8293f, STR_DEFAULT as STR_DEFAULT_6fc8293f, arrayEqual as arrayEqual_6fc8293f, assignObject as assignObject_6fc8293f, createTextNode as createTextNode_6fc8293f, createComment as createComment_6fc8293f, createElement as createElement_6fc8293f, createElementWithoutAttrs as createElementWithoutAttrs_6fc8293f, createSVGElement as createSVGElement_6fc8293f, createSVGElementWithoutAttrs as createSVGElementWithoutAttrs_6fc8293f, createFragment as createFragment_6fc8293f, appendChild as appendChild_6fc8293f, setText as setText_6fc8293f, setAttribute as setAttribute_6fc8293f, removeAttribute as removeAttribute_6fc8293f, setInputValue as setInputValue_6fc8293f, addEvent as addEvent_6fc8293f, ParameterComponent as ParameterComponent_6fc8293f, I18nComponent as I18nComponent_6fc8293f\n} from 'jinge';\nimport {\n  HTML_ATTR_value as HTML_ATTR_value_6fc8293f, HTML_ATTR_checked as HTML_ATTR_checked_6fc8293f, HTML_ATTR_selected as HTML_ATTR_selected_6fc8293f\n} from 'jinge';\nimport { ForComponent as ForComponent_5b21f119 } from 'jinge';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElement_6fc8293f(\n      \"h2\",\n      component[CSTYLE_PID_6fc8293f],\n      \"Form Input\"\n    );\n    component[ROOT_NODES_6fc8293f].push(el);\n    return el;\n  })(),\n  (() => {\n    const el = createElement_6fc8293f(\n      \"div\",\n      component[CSTYLE_PID_6fc8293f],\n      createElementWithoutAttrs_6fc8293f(\n        \"form\",\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElement_6fc8293f(\n            \"label\",\n            {\n              for: \"t\"\n            },\n            \"TEXT:\"\n          ),\n          (() => {\n            const el = createElement_6fc8293f(\n              \"input\",\n              {\n                id: \"t\",\n                placeholder: \"input 1\"\n              },\n            );\n            const fn_0 = () => {\n              el[HTML_ATTR_value_6fc8293f] = function () {\n                let _0;\n                return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t;\n            }();\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t\"], fn_0, component);\n            addEvent_6fc8293f(el, 'input', function(...args) {vm_0.data.t = args[0].target.value})\n            return el;\n          })()\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElement_6fc8293f(\n            \"label\",\n            {\n              for: \"t2\"\n            },\n            \"TEXTAREA:\"\n          ),\n          (() => {\n            const el = createElement_6fc8293f(\n              \"textarea\",\n              {\n                id: \"t2\"\n              },\n              (() => {\n                const el = createTextNode_6fc8293f();\n                const fn_0 = () => {\n                  setText_6fc8293f(el, function () {\n                    let _0;\n                    return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t2;\n                }());\n                };\n                fn_0();\n                vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t2\"], fn_0, component);\n                return el;\n              })()\n            );\n            const fn_0 = () => {\n              setAttribute_6fc8293f(el, \"placeholder\", 'input ' + function () {\n                let _0;\n                return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t;\n            }());\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t\"], fn_0, component);\n            addEvent_6fc8293f(el, 'input', function(...args) {vm_0.data.t2 = args[0].target.value})\n            return el;\n          })()\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElementWithoutAttrs_6fc8293f(\n            \"label\",\n            \"CHECKBOX:\"\n          ),\n          (() => {\n            const el = createElement_6fc8293f(\n              \"input\",\n              {\n                id: \"t3\",\n                type: \"checkbox\"\n              },\n            );\n            const fn_0 = () => {\n              el[HTML_ATTR_checked_6fc8293f] = !!(function () {\n                let _0;\n                return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t3;\n            }());\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t3\"], fn_0, component);\n            addEvent_6fc8293f(el, 'change', function(...args) {vm_0.data.t3 = args[0].target.checked})\n            return el;\n          })(),\n          createElement_6fc8293f(\n            \"label\",\n            {\n              for: \"t3\"\n            },\n            \"Click here to check: \",\n            (() => {\n              const el = createTextNode_6fc8293f();\n              const fn_0 = () => {\n                setText_6fc8293f(el, function () {\n                  let _0;\n                  return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t3;\n              }());\n              };\n              fn_0();\n              vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t3\"], fn_0, component);\n              return el;\n            })()\n          )\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElementWithoutAttrs_6fc8293f(\n            \"label\",\n            \"MULTI CHECK:\"\n          ),\n          ...(() => {\n            const attrs = wrapAttrs_6fc8293f({\n              [VM_DEBUG_NAME_6fc8293f]: \"attrs_of_<for>\",\n              [VM_ATTRS_6fc8293f]: null,\n              [CONTEXT_6fc8293f]: component[CONTEXT_6fc8293f],\n              loop: null,\n              [ARG_COMPONENTS_6fc8293f]: {\n                [STR_DEFAULT_6fc8293f]: function(component) {\n                  const vm_1 = component;\n                  return [\n                  (() => {\n                    const el = createElement_6fc8293f(\n                      \"label\",\n                      component[CSTYLE_PID_6fc8293f],\n                      (() => {\n                        const el = createElement_6fc8293f(\n                          \"input\",\n                          {\n                            name: \"t4\",\n                            type: \"checkbox\"\n                          },\n                        );\n                        const fn_0 = () => {\n                          el[HTML_ATTR_checked_6fc8293f] = !!(function () {\n                            let _0;\n                            return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.selected;\n                        }());\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"selected\"], fn_0, component);\n                        addEvent_6fc8293f(el, 'change', function(...args) {(vm_1.each.selected = args[0].target.checked) ? vm_0.add(vm_1.each.name) : vm_0.del(vm_1.each.name)})\n                        return el;\n                      })(),\n                      (() => {\n                        const el = createTextNode_6fc8293f();\n                        const fn_0 = () => {\n                          setText_6fc8293f(el, function () {\n                            let _0;\n                            return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.name;\n                        }());\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"name\"], fn_0, component);\n                        return el;\n                      })()\n                    );\n                    component[ROOT_NODES_6fc8293f].push(el);\n                    return el;\n                  })()\n                  ];\n                }\n              }\n            });\n            const fn_0 = () => {\n              attrs.loop = vm_0.fruits4;\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"fruits4\"], fn_0, component);\n            const el = new ForComponent_5b21f119(attrs);\n            component[NON_ROOT_COMPONENT_NODES_6fc8293f].push(el);\n            return assertRenderResults_6fc8293f(el[RENDER_6fc8293f](component));\n          })()\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElementWithoutAttrs_6fc8293f(\n            \"label\",\n            \"RADIO:\"\n          ),\n          ...(() => {\n            const attrs = wrapAttrs_6fc8293f({\n              [VM_DEBUG_NAME_6fc8293f]: \"attrs_of_<for>\",\n              [VM_ATTRS_6fc8293f]: null,\n              [CONTEXT_6fc8293f]: component[CONTEXT_6fc8293f],\n              loop: null,\n              [ARG_COMPONENTS_6fc8293f]: {\n                [STR_DEFAULT_6fc8293f]: function(component) {\n                  const vm_1 = component;\n                  return [\n                  (() => {\n                    const el = createElement_6fc8293f(\n                      \"label\",\n                      component[CSTYLE_PID_6fc8293f],\n                      (() => {\n                        const el = createElement_6fc8293f(\n                          \"input\",\n                          {\n                            name: \"t5\",\n                            type: \"radio\"\n                          },\n                        );\n                        const fn_0 = () => {\n                          el[HTML_ATTR_checked_6fc8293f] = !!(vm_1.each === function () {\n                            let _0;\n                            return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t5;\n                        }());\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\"], fn_0, component);\n                        vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t5\"], fn_0, component);\n                        addEvent_6fc8293f(el, 'click', function(...args) {vm_0.data.t5 = vm_1.each})\n                        return el;\n                      })(),\n                      (() => {\n                        const el = createTextNode_6fc8293f();\n                        const fn_0 = () => {\n                          setText_6fc8293f(el, vm_1.each);\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\"], fn_0, component);\n                        return el;\n                      })()\n                    );\n                    component[ROOT_NODES_6fc8293f].push(el);\n                    return el;\n                  })()\n                  ];\n                }\n              }\n            });\n            const fn_0 = () => {\n              attrs.loop = vm_0.fruits5;\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"fruits5\"], fn_0, component);\n            const el = new ForComponent_5b21f119(attrs);\n            component[NON_ROOT_COMPONENT_NODES_6fc8293f].push(el);\n            return assertRenderResults_6fc8293f(el[RENDER_6fc8293f](component));\n          })()\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElementWithoutAttrs_6fc8293f(\n            \"label\",\n            \"SELECT:\"\n          ),\n          (() => {\n            const el = createElementWithoutAttrs_6fc8293f(\n              \"select\",\n              createElement_6fc8293f(\n                \"option\",\n                {\n                  disabled: true,\n                  value: \"\"\n                },\n                \"Please select one\"\n              ),\n              ...(() => {\n                const attrs = wrapAttrs_6fc8293f({\n                  [VM_DEBUG_NAME_6fc8293f]: \"attrs_of_<for>\",\n                  [VM_ATTRS_6fc8293f]: null,\n                  [CONTEXT_6fc8293f]: component[CONTEXT_6fc8293f],\n                  loop: null,\n                  [ARG_COMPONENTS_6fc8293f]: {\n                    [STR_DEFAULT_6fc8293f]: function(component) {\n                      const vm_1 = component;\n                      return [\n                      (() => {\n                        const el = createElement_6fc8293f(\n                          \"option\",\n                          component[CSTYLE_PID_6fc8293f],\n                          (() => {\n                            const el = createTextNode_6fc8293f();\n                            const fn_0 = () => {\n                              setText_6fc8293f(el, vm_1.each);\n                            };\n                            fn_0();\n                            vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\"], fn_0, component);\n                            return el;\n                          })()\n                        );\n                        const fn_0 = () => {\n                          el[HTML_ATTR_value_6fc8293f] = vm_1.each;\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\"], fn_0, component);\n                        component[ROOT_NODES_6fc8293f].push(el);\n                        return el;\n                      })()\n                      ];\n                    }\n                  }\n                });\n                const fn_0 = () => {\n                  attrs.loop = vm_0.fruits5;\n                };\n                fn_0();\n                vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"fruits5\"], fn_0, component);\n                const el = new ForComponent_5b21f119(attrs);\n                component[NON_ROOT_COMPONENT_NODES_6fc8293f].push(el);\n                return assertRenderResults_6fc8293f(el[RENDER_6fc8293f](component));\n              })()\n            );\n            const fn_0 = () => {\n              el[HTML_ATTR_value_6fc8293f] = function () {\n                let _0;\n                return (_0 = vm_0.data) === null || _0 === void 0 ? void 0 : _0.t6;\n            }();\n            };\n            fn_0();\n            vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"data\",\"t6\"], fn_0, component);\n            addEvent_6fc8293f(el, 'change', function(...args) {vm_0.data.t6 = args[0].target.value})\n            return el;\n          })()\n        ),\n        createElementWithoutAttrs_6fc8293f(\n          \"p\",\n          createElementWithoutAttrs_6fc8293f(\n            \"label\",\n            \"MULTI SELECT:\"\n          ),\n          (() => {\n            const el = createElement_6fc8293f(\n              \"select\",\n              {\n                multiple: true\n              },\n              ...(() => {\n                const attrs = wrapAttrs_6fc8293f({\n                  [VM_DEBUG_NAME_6fc8293f]: \"attrs_of_<for>\",\n                  [VM_ATTRS_6fc8293f]: null,\n                  [CONTEXT_6fc8293f]: component[CONTEXT_6fc8293f],\n                  loop: null,\n                  [ARG_COMPONENTS_6fc8293f]: {\n                    [STR_DEFAULT_6fc8293f]: function(component) {\n                      const vm_1 = component;\n                      return [\n                      (() => {\n                        const el = createElement_6fc8293f(\n                          \"option\",\n                          component[CSTYLE_PID_6fc8293f],\n                          (() => {\n                            const el = createTextNode_6fc8293f();\n                            const fn_0 = () => {\n                              setText_6fc8293f(el, function () {\n                                let _0;\n                                return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.name;\n                            }());\n                            };\n                            fn_0();\n                            vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"name\"], fn_0, component);\n                            return el;\n                          })(),\n                          \":\",\n                          (() => {\n                            const el = createTextNode_6fc8293f();\n                            const fn_0 = () => {\n                              setText_6fc8293f(el, function () {\n                                let _0;\n                                return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.selected;\n                            }());\n                            };\n                            fn_0();\n                            vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"selected\"], fn_0, component);\n                            return el;\n                          })()\n                        );\n                        const fn_0 = () => {\n                          el[HTML_ATTR_value_6fc8293f] = function () {\n                            let _0;\n                            return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.name;\n                        }();\n                        };\n                        fn_0();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"name\"], fn_0, component);\n                        const fn_1 = () => {\n                          el[HTML_ATTR_selected_6fc8293f] = !!(function () {\n                            let _0;\n                            return (_0 = vm_1.each) === null || _0 === void 0 ? void 0 : _0.selected;\n                        }());\n                        };\n                        fn_1();\n                        vm_1[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"each\",\"selected\"], fn_1, component);\n                        component[ROOT_NODES_6fc8293f].push(el);\n                        return el;\n                      })()\n                      ];\n                    }\n                  }\n                });\n                const fn_0 = () => {\n                  attrs.loop = vm_0.fruits4;\n                };\n                fn_0();\n                vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"fruits4\"], fn_0, component);\n                const el = new ForComponent_5b21f119(attrs);\n                component[NON_ROOT_COMPONENT_NODES_6fc8293f].push(el);\n                return assertRenderResults_6fc8293f(el[RENDER_6fc8293f](component));\n              })()\n            );\n            addEvent_6fc8293f(el, 'change', function(...args) {vm_0.onMultiSelectChange(args[0].target)})\n            return el;\n          })()\n        )\n      )\n    );\n    component[ROOT_NODES_6fc8293f].push(el);\n    return el;\n  })(),\n  (() => {\n    const el = createElement_6fc8293f(\n      \"h4\",\n      component[CSTYLE_PID_6fc8293f],\n      \"Input Form Data:\"\n    );\n    component[ROOT_NODES_6fc8293f].push(el);\n    return el;\n  })(),\n  (() => {\n    const el = createElement_6fc8293f(\n      \"pre\",\n      component[CSTYLE_PID_6fc8293f],\n      (() => {\n        const el = createTextNode_6fc8293f();\n        const fn_0 = () => {\n          setText_6fc8293f(el, vm_0.output);\n        };\n        fn_0();\n        vm_0[VM_ATTRS_6fc8293f][VM_ON_6fc8293f]([\"output\"], fn_0, component);\n        return el;\n      })()\n    );\n    component[ROOT_NODES_6fc8293f].push(el);\n    return el;\n  })(),\n  (() => {\n    const el = createElement_6fc8293f(\n      \"p\",\n      component[CSTYLE_PID_6fc8293f],\n      (() => {\n        const el = createElementWithoutAttrs_6fc8293f(\n          \"button\",\n          \"Test\"\n        );\n        addEvent_6fc8293f(el, 'click', function(...args) {vm_0.test(...args)})\n        return el;\n      })()\n    );\n    component[ROOT_NODES_6fc8293f].push(el);\n    return el;\n  })()\n  ];\n}","\nimport {\n  VM_ATTRS as VM_ATTRS_4a82e3ceda,\n  VM_ON as VM_ON_4a82e3ceda\n} from 'jinge/vm/core';\nimport {\n  wrapComponent as wrapComponent_4a82e3ceda\n} from 'jinge/vm/proxy';\n\nimport {\n  Component,\n  VM,\n  bootstrap,\n  vmWatch\n} from 'jinge';\n\nimport _tpl from './app.html';\n\nclass App extends Component {\n  static get template() {\n    return _tpl;\n  }\n  constructor(args) {\n    const vm_4a82e3ceda = super(args);\n    vm_4a82e3ceda.data = VM({\n      t: 'hello',\n      t2: 'hello\\njinge',\n      t3: true,\n      t4: [],\n      t5: 'Banana',\n      t6: '',\n      t7: []\n    });\n    vm_4a82e3ceda.fruits5 = VM([\n      'Apple',\n      'Orange',\n      'Banana'\n    ]);\n    vm_4a82e3ceda.fruits4 = vm_4a82e3ceda.fruits5.map(f => ({\n      name: f,\n      selected: false\n    }));\n    vm_4a82e3ceda.output = vm_4a82e3ceda.genOutput();\n    vmWatch(this, 'data.**', () => {\n      vm_4a82e3ceda.output = vm_4a82e3ceda.genOutput();\n    });\n    return vm_4a82e3ceda;\n  }\n  log(...args) {\n    console.log(...args);\n  }\n  add(f) {\n    console.log('add', f);\n    this.data.t4.push(f);\n  }\n  del(f) {\n    const i = this.data.t4.indexOf(f);\n    if (i >= 0) this.data.t4.splice(i, 1);\n  }\n  onMultiSelectChange($select) {\n    this.data.t7 = this.fruits4.filter((f, i) => {\n      return (f.selected = $select.children[i].selected);\n    }).map(f => f.name);\n  }\n  genOutput() {\n    return JSON.stringify(this.data, null, 2);\n  }\n  test() {\n    this.data.t2 = this.data.t;\n    this.data.t6 = this.fruits5[2];\n  }\n}\n\nbootstrap(App, document.getElementById('root-app'));\n"],"sourceRoot":""}